{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Inner</th>\n",
       "      <th>Status</th>\n",
       "      <th>Local authority</th>\n",
       "      <th>Political control</th>\n",
       "      <th>Headquarters</th>\n",
       "      <th>Area (sq mi)</th>\n",
       "      <th>Population (2013 est)[1]</th>\n",
       "      <th>Co-ordinates</th>\n",
       "      <th>Nr. in map</th>\n",
       "      <th>Population density</th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Barking and Dagenham [note 1]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Barking and Dagenham London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Town Hall, 1 Town Square</td>\n",
       "      <td>13.93</td>\n",
       "      <td>194352</td>\n",
       "      <td>﻿51.5607°N 0.1557°E</td>\n",
       "      <td>25</td>\n",
       "      <td>13952.045944</td>\n",
       "      <td>51.5607</td>\n",
       "      <td>0.1557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Barnet London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>North London Business Park, Oakleigh Road South</td>\n",
       "      <td>33.49</td>\n",
       "      <td>369088</td>\n",
       "      <td>﻿51.6252°N 0.1517°W</td>\n",
       "      <td>31</td>\n",
       "      <td>11020.842042</td>\n",
       "      <td>51.6252</td>\n",
       "      <td>-0.1517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bexley</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Bexley London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>Civic Offices, 2 Watling Street</td>\n",
       "      <td>23.38</td>\n",
       "      <td>236687</td>\n",
       "      <td>﻿51.4549°N 0.1505°E</td>\n",
       "      <td>23</td>\n",
       "      <td>10123.481608</td>\n",
       "      <td>51.4549</td>\n",
       "      <td>0.1505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Brent</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Brent London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Brent Civic Centre, Engineers Way</td>\n",
       "      <td>16.70</td>\n",
       "      <td>317264</td>\n",
       "      <td>﻿51.5588°N 0.2817°W</td>\n",
       "      <td>12</td>\n",
       "      <td>18997.844311</td>\n",
       "      <td>51.5588</td>\n",
       "      <td>-0.2817</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Bromley</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Bromley London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>Civic Centre, Stockwell Close</td>\n",
       "      <td>57.97</td>\n",
       "      <td>317899</td>\n",
       "      <td>﻿51.4039°N 0.0198°E</td>\n",
       "      <td>20</td>\n",
       "      <td>5483.853717</td>\n",
       "      <td>51.4039</td>\n",
       "      <td>0.0198</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Borough Inner Status  \\\n",
       "0  Barking and Dagenham [note 1]   NaN    NaN   \n",
       "1                         Barnet   NaN    NaN   \n",
       "2                         Bexley   NaN    NaN   \n",
       "3                          Brent   NaN    NaN   \n",
       "4                        Bromley   NaN    NaN   \n",
       "\n",
       "                               Local authority Political control  \\\n",
       "0  Barking and Dagenham London Borough Council            Labour   \n",
       "1                Barnet London Borough Council      Conservative   \n",
       "2                Bexley London Borough Council      Conservative   \n",
       "3                 Brent London Borough Council            Labour   \n",
       "4               Bromley London Borough Council      Conservative   \n",
       "\n",
       "                                      Headquarters  Area (sq mi)  \\\n",
       "0                         Town Hall, 1 Town Square         13.93   \n",
       "1  North London Business Park, Oakleigh Road South         33.49   \n",
       "2                  Civic Offices, 2 Watling Street         23.38   \n",
       "3                Brent Civic Centre, Engineers Way         16.70   \n",
       "4                    Civic Centre, Stockwell Close         57.97   \n",
       "\n",
       "   Population (2013 est)[1]          Co-ordinates  Nr. in map  \\\n",
       "0                    194352   ﻿51.5607°N 0.1557°E          25   \n",
       "1                    369088   ﻿51.6252°N 0.1517°W          31   \n",
       "2                    236687   ﻿51.4549°N 0.1505°E          23   \n",
       "3                    317264   ﻿51.5588°N 0.2817°W          12   \n",
       "4                    317899   ﻿51.4039°N 0.0198°E          20   \n",
       "\n",
       "   Population density      lat     lng  \n",
       "0        13952.045944  51.5607  0.1557  \n",
       "1        11020.842042  51.6252 -0.1517  \n",
       "2        10123.481608  51.4549  0.1505  \n",
       "3        18997.844311  51.5588 -0.2817  \n",
       "4         5483.853717  51.4039  0.0198  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import requests\n",
    "\n",
    "#import dataset\n",
    "data=requests.get(\"https://en.wikipedia.org/wiki/List_of_London_boroughs\")\n",
    "df = pd.read_html(data.text)\n",
    "df_lond = df[0]\n",
    "df_lond['Population density']=df_lond['Population (2013 est)[1]']/df_lond['Area (sq mi)']\n",
    "df_lond[\"Co-ordinates\"]=df_lond[\"Co-ordinates\"].str.split(\"/\", n = 1, expand = True)[1] \n",
    "df_lond[\"lat\"]=df_lond[\"Co-ordinates\"].str.split(\"N\", n = 1, expand = True)[0] \n",
    "df_lond[\"lng\"]=df_lond[\"Co-ordinates\"].str.split(\"N\", n = 1, expand = True)[1] \n",
    "\n",
    "#clean dataset \n",
    "df_lond[\"lat\"]=(df_lond[\"lat\"].str.replace(\"°\",\"\"))\n",
    "df_lond[\"lat\"]=df_lond[\"lat\"].str.replace(\" \",\"\")\n",
    "df_lond[\"lat\"]=df_lond[\"lat\"].str.replace(\"\\ufeff\",\"\").astype(float)\n",
    "df_lond[\"lng\"]=df_lond[\"lng\"].str.replace(\"°\",\"\")\n",
    "df_lond[\"lng\"]=np.where(df_lond[\"lng\"].str.slice(7,8, 1)==\"E\",pd.to_numeric(df_lond[\"lng\"].str.slice(0,7, 1)),-1*pd.to_numeric(df_lond[\"lng\"].str.slice(0,7, 1)))\n",
    "\n",
    "df_lond.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Avg price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>City of London</td>\n",
       "      <td>897910</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Barking &amp; Dagenham</td>\n",
       "      <td>305229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>523068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Bexley</td>\n",
       "      <td>332290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Brent</td>\n",
       "      <td>494761</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "0             Borough Avg price\n",
       "1      City of London    897910\n",
       "2  Barking & Dagenham    305229\n",
       "3              Barnet    523068\n",
       "4              Bexley    332290\n",
       "5               Brent    494761"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "#import price dataset and clean\n",
    "\n",
    "df_price = pd.read_excel('UK House price index.xls',sheet_name=2).transpose().reset_index()\n",
    "new_header = df_price.iloc[0]\n",
    "df_price = df_price[1:] #take the data less the header row\n",
    "df_price.columns = new_header\n",
    "df_price_2019 = df_price.iloc[:,[0,-1]].rename(columns={0: \"Borough\", 1: \"Avg price\"})\n",
    "df_price_2019=df_price_2019.rename(columns={\"Unnamed: 0\": \"Borough\", df_price_2019.columns[1]: \"Avg price\"})\n",
    "\n",
    "df_price_2019.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Inner</th>\n",
       "      <th>Status</th>\n",
       "      <th>Local authority</th>\n",
       "      <th>Political control</th>\n",
       "      <th>Headquarters</th>\n",
       "      <th>Area (sq mi)</th>\n",
       "      <th>Population (2013 est)[1]</th>\n",
       "      <th>Co-ordinates</th>\n",
       "      <th>Nr. in map</th>\n",
       "      <th>Population density</th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "      <th>Avg price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Barnet London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>North London Business Park, Oakleigh Road South</td>\n",
       "      <td>33.49</td>\n",
       "      <td>369088</td>\n",
       "      <td>﻿51.6252°N 0.1517°W</td>\n",
       "      <td>31</td>\n",
       "      <td>11020.842042</td>\n",
       "      <td>51.6252</td>\n",
       "      <td>-0.1517</td>\n",
       "      <td>523068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Bexley</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Bexley London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>Civic Offices, 2 Watling Street</td>\n",
       "      <td>23.38</td>\n",
       "      <td>236687</td>\n",
       "      <td>﻿51.4549°N 0.1505°E</td>\n",
       "      <td>23</td>\n",
       "      <td>10123.481608</td>\n",
       "      <td>51.4549</td>\n",
       "      <td>0.1505</td>\n",
       "      <td>332290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Brent</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Brent London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Brent Civic Centre, Engineers Way</td>\n",
       "      <td>16.70</td>\n",
       "      <td>317264</td>\n",
       "      <td>﻿51.5588°N 0.2817°W</td>\n",
       "      <td>12</td>\n",
       "      <td>18997.844311</td>\n",
       "      <td>51.5588</td>\n",
       "      <td>-0.2817</td>\n",
       "      <td>494761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Bromley</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Bromley London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>Civic Centre, Stockwell Close</td>\n",
       "      <td>57.97</td>\n",
       "      <td>317899</td>\n",
       "      <td>﻿51.4039°N 0.0198°E</td>\n",
       "      <td>20</td>\n",
       "      <td>5483.853717</td>\n",
       "      <td>51.4039</td>\n",
       "      <td>0.0198</td>\n",
       "      <td>446116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Camden</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Camden London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Camden Town Hall, Judd Street</td>\n",
       "      <td>8.40</td>\n",
       "      <td>229719</td>\n",
       "      <td>﻿51.5290°N 0.1255°W</td>\n",
       "      <td>11</td>\n",
       "      <td>27347.500000</td>\n",
       "      <td>51.5290</td>\n",
       "      <td>-0.1255</td>\n",
       "      <td>793557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Croydon</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Croydon London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Bernard Weatherill House, Mint Walk</td>\n",
       "      <td>33.41</td>\n",
       "      <td>372752</td>\n",
       "      <td>﻿51.3714°N 0.0977°W</td>\n",
       "      <td>19</td>\n",
       "      <td>11156.899132</td>\n",
       "      <td>51.3714</td>\n",
       "      <td>-0.0977</td>\n",
       "      <td>369161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Ealing</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ealing London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Perceval House, 14-16 Uxbridge Road</td>\n",
       "      <td>21.44</td>\n",
       "      <td>342494</td>\n",
       "      <td>﻿51.5130°N 0.3089°W</td>\n",
       "      <td>13</td>\n",
       "      <td>15974.533582</td>\n",
       "      <td>51.5130</td>\n",
       "      <td>-0.3089</td>\n",
       "      <td>479648</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>Enfield</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Enfield London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Civic Centre, Silver Street</td>\n",
       "      <td>31.74</td>\n",
       "      <td>320524</td>\n",
       "      <td>﻿51.6538°N 0.0799°W</td>\n",
       "      <td>30</td>\n",
       "      <td>10098.424701</td>\n",
       "      <td>51.6538</td>\n",
       "      <td>-0.0799</td>\n",
       "      <td>386930</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Hackney</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hackney London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Hackney Town Hall, Mare Street</td>\n",
       "      <td>7.36</td>\n",
       "      <td>257379</td>\n",
       "      <td>﻿51.5450°N 0.0553°W</td>\n",
       "      <td>9</td>\n",
       "      <td>34969.972826</td>\n",
       "      <td>51.5450</td>\n",
       "      <td>-0.0553</td>\n",
       "      <td>566567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Haringey</td>\n",
       "      <td>[note 3]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Haringey London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Civic Centre, High Road</td>\n",
       "      <td>11.42</td>\n",
       "      <td>263386</td>\n",
       "      <td>﻿51.6000°N 0.1119°W</td>\n",
       "      <td>29</td>\n",
       "      <td>23063.572680</td>\n",
       "      <td>51.6000</td>\n",
       "      <td>-0.1119</td>\n",
       "      <td>546294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Harrow</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Harrow London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Civic Centre, Station Road</td>\n",
       "      <td>19.49</td>\n",
       "      <td>243372</td>\n",
       "      <td>﻿51.5898°N 0.3346°W</td>\n",
       "      <td>32</td>\n",
       "      <td>12487.018984</td>\n",
       "      <td>51.5898</td>\n",
       "      <td>-0.3346</td>\n",
       "      <td>458835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>Havering</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Havering London Borough Council</td>\n",
       "      <td>Conservative (council NOC)</td>\n",
       "      <td>Town Hall, Main Road</td>\n",
       "      <td>43.35</td>\n",
       "      <td>242080</td>\n",
       "      <td>﻿51.5812°N 0.1837°E</td>\n",
       "      <td>24</td>\n",
       "      <td>5584.313725</td>\n",
       "      <td>51.5812</td>\n",
       "      <td>0.1837</td>\n",
       "      <td>364998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>Hillingdon</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hillingdon London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>Civic Centre, High Street</td>\n",
       "      <td>44.67</td>\n",
       "      <td>286806</td>\n",
       "      <td>﻿51.5441°N 0.4760°W</td>\n",
       "      <td>33</td>\n",
       "      <td>6420.550705</td>\n",
       "      <td>51.5441</td>\n",
       "      <td>-0.4760</td>\n",
       "      <td>405612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>Hounslow</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hounslow London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Civic Centre, Lampton Road</td>\n",
       "      <td>21.61</td>\n",
       "      <td>262407</td>\n",
       "      <td>﻿51.4746°N 0.3680°W</td>\n",
       "      <td>14</td>\n",
       "      <td>12142.850532</td>\n",
       "      <td>51.4746</td>\n",
       "      <td>-0.3680</td>\n",
       "      <td>412065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>Islington</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Islington London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Municipal Offices, 222 Upper Street</td>\n",
       "      <td>5.74</td>\n",
       "      <td>215667</td>\n",
       "      <td>﻿51.5416°N 0.1022°W</td>\n",
       "      <td>10</td>\n",
       "      <td>37572.648084</td>\n",
       "      <td>51.5416</td>\n",
       "      <td>-0.1022</td>\n",
       "      <td>661003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>Kingston upon Thames</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Royal</td>\n",
       "      <td>Kingston upon Thames London Borough Council</td>\n",
       "      <td>Liberal Democrat</td>\n",
       "      <td>Guildhall, High Street</td>\n",
       "      <td>14.38</td>\n",
       "      <td>166793</td>\n",
       "      <td>﻿51.4085°N 0.3064°W</td>\n",
       "      <td>16</td>\n",
       "      <td>11598.956885</td>\n",
       "      <td>51.4085</td>\n",
       "      <td>-0.3064</td>\n",
       "      <td>506583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>Lambeth</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Lambeth London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Lambeth Town Hall, Brixton Hill</td>\n",
       "      <td>10.36</td>\n",
       "      <td>314242</td>\n",
       "      <td>﻿51.4607°N 0.1163°W</td>\n",
       "      <td>6</td>\n",
       "      <td>30332.239382</td>\n",
       "      <td>51.4607</td>\n",
       "      <td>-0.1163</td>\n",
       "      <td>515583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>Lewisham</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Lewisham London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Town Hall, 1 Catford Road</td>\n",
       "      <td>13.57</td>\n",
       "      <td>286180</td>\n",
       "      <td>﻿51.4452°N 0.0209°W</td>\n",
       "      <td>21</td>\n",
       "      <td>21089.167281</td>\n",
       "      <td>51.4452</td>\n",
       "      <td>-0.0209</td>\n",
       "      <td>425474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18</td>\n",
       "      <td>Merton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Merton London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Civic Centre, London Road</td>\n",
       "      <td>14.52</td>\n",
       "      <td>203223</td>\n",
       "      <td>﻿51.4014°N 0.1958°W</td>\n",
       "      <td>17</td>\n",
       "      <td>13996.074380</td>\n",
       "      <td>51.4014</td>\n",
       "      <td>-0.1958</td>\n",
       "      <td>515675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19</td>\n",
       "      <td>Newham</td>\n",
       "      <td>[note 3]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Newham London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Newham Dockside, 1000 Dockside Road</td>\n",
       "      <td>13.98</td>\n",
       "      <td>318227</td>\n",
       "      <td>﻿51.5077°N 0.0469°E</td>\n",
       "      <td>27</td>\n",
       "      <td>22763.018598</td>\n",
       "      <td>51.5077</td>\n",
       "      <td>0.0469</td>\n",
       "      <td>381220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20</td>\n",
       "      <td>Redbridge</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Redbridge London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Town Hall, 128-142 High Road</td>\n",
       "      <td>21.78</td>\n",
       "      <td>288272</td>\n",
       "      <td>﻿51.5590°N 0.0741°E</td>\n",
       "      <td>26</td>\n",
       "      <td>13235.629017</td>\n",
       "      <td>51.5590</td>\n",
       "      <td>0.0741</td>\n",
       "      <td>426633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21</td>\n",
       "      <td>Richmond upon Thames</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Richmond upon Thames London Borough Council</td>\n",
       "      <td>Liberal Democrat</td>\n",
       "      <td>Civic Centre, 44 York Street</td>\n",
       "      <td>22.17</td>\n",
       "      <td>191365</td>\n",
       "      <td>﻿51.4479°N 0.3260°W</td>\n",
       "      <td>15</td>\n",
       "      <td>8631.709517</td>\n",
       "      <td>51.4479</td>\n",
       "      <td>-0.3260</td>\n",
       "      <td>650810</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22</td>\n",
       "      <td>Southwark</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Southwark London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>160 Tooley Street</td>\n",
       "      <td>11.14</td>\n",
       "      <td>298464</td>\n",
       "      <td>﻿51.5035°N 0.0804°W</td>\n",
       "      <td>7</td>\n",
       "      <td>26792.100539</td>\n",
       "      <td>51.5035</td>\n",
       "      <td>-0.0804</td>\n",
       "      <td>508698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23</td>\n",
       "      <td>Sutton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sutton London Borough Council</td>\n",
       "      <td>Liberal Democrat</td>\n",
       "      <td>Civic Offices, St Nicholas Way</td>\n",
       "      <td>16.93</td>\n",
       "      <td>195914</td>\n",
       "      <td>﻿51.3618°N 0.1945°W</td>\n",
       "      <td>18</td>\n",
       "      <td>11572.002363</td>\n",
       "      <td>51.3618</td>\n",
       "      <td>-0.1945</td>\n",
       "      <td>372832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>24</td>\n",
       "      <td>Tower Hamlets</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tower Hamlets London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Town Hall, Mulberry Place, 5 Clove Crescent</td>\n",
       "      <td>7.63</td>\n",
       "      <td>272890</td>\n",
       "      <td>﻿51.5099°N 0.0059°W</td>\n",
       "      <td>8</td>\n",
       "      <td>35765.399738</td>\n",
       "      <td>51.5099</td>\n",
       "      <td>-0.0059</td>\n",
       "      <td>438037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25</td>\n",
       "      <td>Waltham Forest</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Waltham Forest London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Waltham Forest Town Hall, Forest Road</td>\n",
       "      <td>14.99</td>\n",
       "      <td>265797</td>\n",
       "      <td>﻿51.5908°N 0.0134°W</td>\n",
       "      <td>28</td>\n",
       "      <td>17731.621081</td>\n",
       "      <td>51.5908</td>\n",
       "      <td>-0.0134</td>\n",
       "      <td>444319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>26</td>\n",
       "      <td>Wandsworth</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Wandsworth London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>The Town Hall, Wandsworth High Street</td>\n",
       "      <td>13.23</td>\n",
       "      <td>310516</td>\n",
       "      <td>﻿51.4567°N 0.1910°W</td>\n",
       "      <td>5</td>\n",
       "      <td>23470.597128</td>\n",
       "      <td>51.4567</td>\n",
       "      <td>-0.1910</td>\n",
       "      <td>602178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>27</td>\n",
       "      <td>Westminster</td>\n",
       "      <td>NaN</td>\n",
       "      <td>City</td>\n",
       "      <td>Westminster City Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>Westminster City Hall, 64 Victoria Street</td>\n",
       "      <td>8.29</td>\n",
       "      <td>226841</td>\n",
       "      <td>﻿51.4973°N 0.1372°W</td>\n",
       "      <td>2</td>\n",
       "      <td>27363.208685</td>\n",
       "      <td>51.4973</td>\n",
       "      <td>-0.1372</td>\n",
       "      <td>897094</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Borough     Inner Status  \\\n",
       "0                 Barnet       NaN    NaN   \n",
       "1                 Bexley       NaN    NaN   \n",
       "2                  Brent       NaN    NaN   \n",
       "3                Bromley       NaN    NaN   \n",
       "4                 Camden       NaN    NaN   \n",
       "5                Croydon       NaN    NaN   \n",
       "6                 Ealing       NaN    NaN   \n",
       "7                Enfield       NaN    NaN   \n",
       "8                Hackney       NaN    NaN   \n",
       "9               Haringey  [note 3]    NaN   \n",
       "10                Harrow       NaN    NaN   \n",
       "11              Havering       NaN    NaN   \n",
       "12            Hillingdon       NaN    NaN   \n",
       "13              Hounslow       NaN    NaN   \n",
       "14             Islington       NaN    NaN   \n",
       "15  Kingston upon Thames       NaN  Royal   \n",
       "16               Lambeth       NaN    NaN   \n",
       "17              Lewisham       NaN    NaN   \n",
       "18                Merton       NaN    NaN   \n",
       "19                Newham  [note 3]    NaN   \n",
       "20             Redbridge       NaN    NaN   \n",
       "21  Richmond upon Thames       NaN    NaN   \n",
       "22             Southwark       NaN    NaN   \n",
       "23                Sutton       NaN    NaN   \n",
       "24         Tower Hamlets       NaN    NaN   \n",
       "25        Waltham Forest       NaN    NaN   \n",
       "26            Wandsworth       NaN    NaN   \n",
       "27           Westminster       NaN   City   \n",
       "\n",
       "                                Local authority           Political control  \\\n",
       "0                 Barnet London Borough Council                Conservative   \n",
       "1                 Bexley London Borough Council                Conservative   \n",
       "2                  Brent London Borough Council                      Labour   \n",
       "3                Bromley London Borough Council                Conservative   \n",
       "4                 Camden London Borough Council                      Labour   \n",
       "5                Croydon London Borough Council                      Labour   \n",
       "6                 Ealing London Borough Council                      Labour   \n",
       "7                Enfield London Borough Council                      Labour   \n",
       "8                Hackney London Borough Council                      Labour   \n",
       "9               Haringey London Borough Council                      Labour   \n",
       "10                Harrow London Borough Council                      Labour   \n",
       "11              Havering London Borough Council  Conservative (council NOC)   \n",
       "12            Hillingdon London Borough Council                Conservative   \n",
       "13              Hounslow London Borough Council                      Labour   \n",
       "14             Islington London Borough Council                      Labour   \n",
       "15  Kingston upon Thames London Borough Council            Liberal Democrat   \n",
       "16               Lambeth London Borough Council                      Labour   \n",
       "17              Lewisham London Borough Council                      Labour   \n",
       "18                Merton London Borough Council                      Labour   \n",
       "19                Newham London Borough Council                      Labour   \n",
       "20             Redbridge London Borough Council                      Labour   \n",
       "21  Richmond upon Thames London Borough Council            Liberal Democrat   \n",
       "22             Southwark London Borough Council                      Labour   \n",
       "23                Sutton London Borough Council            Liberal Democrat   \n",
       "24         Tower Hamlets London Borough Council                      Labour   \n",
       "25        Waltham Forest London Borough Council                      Labour   \n",
       "26            Wandsworth London Borough Council                Conservative   \n",
       "27                     Westminster City Council                Conservative   \n",
       "\n",
       "                                       Headquarters  Area (sq mi)  \\\n",
       "0   North London Business Park, Oakleigh Road South         33.49   \n",
       "1                   Civic Offices, 2 Watling Street         23.38   \n",
       "2                 Brent Civic Centre, Engineers Way         16.70   \n",
       "3                     Civic Centre, Stockwell Close         57.97   \n",
       "4                     Camden Town Hall, Judd Street          8.40   \n",
       "5               Bernard Weatherill House, Mint Walk         33.41   \n",
       "6               Perceval House, 14-16 Uxbridge Road         21.44   \n",
       "7                       Civic Centre, Silver Street         31.74   \n",
       "8                    Hackney Town Hall, Mare Street          7.36   \n",
       "9                           Civic Centre, High Road         11.42   \n",
       "10                       Civic Centre, Station Road         19.49   \n",
       "11                             Town Hall, Main Road         43.35   \n",
       "12                        Civic Centre, High Street         44.67   \n",
       "13                       Civic Centre, Lampton Road         21.61   \n",
       "14              Municipal Offices, 222 Upper Street          5.74   \n",
       "15                           Guildhall, High Street         14.38   \n",
       "16                  Lambeth Town Hall, Brixton Hill         10.36   \n",
       "17                        Town Hall, 1 Catford Road         13.57   \n",
       "18                        Civic Centre, London Road         14.52   \n",
       "19              Newham Dockside, 1000 Dockside Road         13.98   \n",
       "20                     Town Hall, 128-142 High Road         21.78   \n",
       "21                     Civic Centre, 44 York Street         22.17   \n",
       "22                                160 Tooley Street         11.14   \n",
       "23                   Civic Offices, St Nicholas Way         16.93   \n",
       "24      Town Hall, Mulberry Place, 5 Clove Crescent          7.63   \n",
       "25            Waltham Forest Town Hall, Forest Road         14.99   \n",
       "26            The Town Hall, Wandsworth High Street         13.23   \n",
       "27        Westminster City Hall, 64 Victoria Street          8.29   \n",
       "\n",
       "    Population (2013 est)[1]          Co-ordinates  Nr. in map  \\\n",
       "0                     369088   ﻿51.6252°N 0.1517°W          31   \n",
       "1                     236687   ﻿51.4549°N 0.1505°E          23   \n",
       "2                     317264   ﻿51.5588°N 0.2817°W          12   \n",
       "3                     317899   ﻿51.4039°N 0.0198°E          20   \n",
       "4                     229719   ﻿51.5290°N 0.1255°W          11   \n",
       "5                     372752   ﻿51.3714°N 0.0977°W          19   \n",
       "6                     342494   ﻿51.5130°N 0.3089°W          13   \n",
       "7                     320524   ﻿51.6538°N 0.0799°W          30   \n",
       "8                     257379   ﻿51.5450°N 0.0553°W           9   \n",
       "9                     263386   ﻿51.6000°N 0.1119°W          29   \n",
       "10                    243372   ﻿51.5898°N 0.3346°W          32   \n",
       "11                    242080   ﻿51.5812°N 0.1837°E          24   \n",
       "12                    286806   ﻿51.5441°N 0.4760°W          33   \n",
       "13                    262407   ﻿51.4746°N 0.3680°W          14   \n",
       "14                    215667   ﻿51.5416°N 0.1022°W          10   \n",
       "15                    166793   ﻿51.4085°N 0.3064°W          16   \n",
       "16                    314242   ﻿51.4607°N 0.1163°W           6   \n",
       "17                    286180   ﻿51.4452°N 0.0209°W          21   \n",
       "18                    203223   ﻿51.4014°N 0.1958°W          17   \n",
       "19                    318227   ﻿51.5077°N 0.0469°E          27   \n",
       "20                    288272   ﻿51.5590°N 0.0741°E          26   \n",
       "21                    191365   ﻿51.4479°N 0.3260°W          15   \n",
       "22                    298464   ﻿51.5035°N 0.0804°W           7   \n",
       "23                    195914   ﻿51.3618°N 0.1945°W          18   \n",
       "24                    272890   ﻿51.5099°N 0.0059°W           8   \n",
       "25                    265797   ﻿51.5908°N 0.0134°W          28   \n",
       "26                    310516   ﻿51.4567°N 0.1910°W           5   \n",
       "27                    226841   ﻿51.4973°N 0.1372°W           2   \n",
       "\n",
       "    Population density      lat     lng Avg price  \n",
       "0         11020.842042  51.6252 -0.1517    523068  \n",
       "1         10123.481608  51.4549  0.1505    332290  \n",
       "2         18997.844311  51.5588 -0.2817    494761  \n",
       "3          5483.853717  51.4039  0.0198    446116  \n",
       "4         27347.500000  51.5290 -0.1255    793557  \n",
       "5         11156.899132  51.3714 -0.0977    369161  \n",
       "6         15974.533582  51.5130 -0.3089    479648  \n",
       "7         10098.424701  51.6538 -0.0799    386930  \n",
       "8         34969.972826  51.5450 -0.0553    566567  \n",
       "9         23063.572680  51.6000 -0.1119    546294  \n",
       "10        12487.018984  51.5898 -0.3346    458835  \n",
       "11         5584.313725  51.5812  0.1837    364998  \n",
       "12         6420.550705  51.5441 -0.4760    405612  \n",
       "13        12142.850532  51.4746 -0.3680    412065  \n",
       "14        37572.648084  51.5416 -0.1022    661003  \n",
       "15        11598.956885  51.4085 -0.3064    506583  \n",
       "16        30332.239382  51.4607 -0.1163    515583  \n",
       "17        21089.167281  51.4452 -0.0209    425474  \n",
       "18        13996.074380  51.4014 -0.1958    515675  \n",
       "19        22763.018598  51.5077  0.0469    381220  \n",
       "20        13235.629017  51.5590  0.0741    426633  \n",
       "21         8631.709517  51.4479 -0.3260    650810  \n",
       "22        26792.100539  51.5035 -0.0804    508698  \n",
       "23        11572.002363  51.3618 -0.1945    372832  \n",
       "24        35765.399738  51.5099 -0.0059    438037  \n",
       "25        17731.621081  51.5908 -0.0134    444319  \n",
       "26        23470.597128  51.4567 -0.1910    602178  \n",
       "27        27363.208685  51.4973 -0.1372    897094  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#merge datasets to get one dataframe\n",
    "df_lond=df_lond.merge(df_price_2019,on='Borough')\n",
    "df_lond"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting package metadata (current_repodata.json): done\n",
      "Solving environment: done\n",
      "\n",
      "## Package Plan ##\n",
      "\n",
      "  environment location: /Users/Manisty/opt/anaconda3\n",
      "\n",
      "  added / updated specs:\n",
      "    - geopy\n",
      "\n",
      "\n",
      "The following packages will be downloaded:\n",
      "\n",
      "    package                    |            build\n",
      "    ---------------------------|-----------------\n",
      "    conda-4.8.0                |           py37_1         3.0 MB  conda-forge\n",
      "    ------------------------------------------------------------\n",
      "                                           Total:         3.0 MB\n",
      "\n",
      "The following packages will be UPDATED:\n",
      "\n",
      "  conda                                       4.7.12-py37_0 --> 4.8.0-py37_1\n",
      "\n",
      "\n",
      "\n",
      "Downloading and Extracting Packages\n",
      "conda-4.8.0          | 3.0 MB    | ##################################### | 100% \n",
      "Preparing transaction: done\n",
      "Verifying transaction: done\n",
      "Executing transaction: done\n",
      "The geograpical coordinate of London are 51.5073219, -0.1276474.\n"
     ]
    }
   ],
   "source": [
    "!conda install --yes -c conda-forge geopy\n",
    "\n",
    "from geopy.geocoders import Nominatim # convert an address into latitude and longitude values\n",
    "address = 'London'\n",
    "#get london location\n",
    "geolocator = Nominatim(user_agent=\"ny_explorer\")\n",
    "location = geolocator.geocode(address)\n",
    "latitude = location.latitude\n",
    "longitude = location.longitude\n",
    "print('The geograpical coordinate of London are {}, {}.'.format(latitude, longitude))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting package metadata (current_repodata.json): done\n",
      "Solving environment: done\n",
      "\n",
      "# All requested packages already installed.\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a20881590>"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "!conda install -c conda-forge folium=0.5.0 --yes\n",
    "import folium\n",
    "\n",
    "# create map of london boroughs\n",
    "map_london= folium.Map(location=[latitude, longitude], zoom_start=10)\n",
    "\n",
    "for lat, lng, borough, neighborhood in zip(df_lond['lat'], df_lond['lng'], df_lond['Borough'], df_lond['Borough']):\n",
    "    label = '{}, {}'.format(neighborhood, borough)\n",
    "    label = folium.Popup(label, parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lng],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color='blue',\n",
    "        fill=True,\n",
    "        fill_color='#3186cc',\n",
    "        fill_opacity=0.7,\n",
    "        parse_html=False).add_to(map_london)  \n",
    "    \n",
    "map_london"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "CLIENT_ID = 'T3HFJIMY0PFZSG0BCBRTUZVB0X1ACHTKTMSLI1EGSBAQ4PSF' # your Foursquare ID\n",
    "CLIENT_SECRET = 'LHZCLXD2JXJOVLEJRXUOMTUHH1PW2YHNQFJYOD1MVTA1QDM5' # your Foursquare Secret\n",
    "VERSION = '20180605' # Foursquare API version\n",
    "LIMIT = 200\n",
    "def getNearbyVenues(names, latitudes, longitudes, radius=500):\n",
    "    \n",
    "    venues_list=[]\n",
    "    for name, lat, lng in zip(names, latitudes, longitudes):\n",
    "        print(name)\n",
    "            \n",
    "        # create the API request URL\n",
    "        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}&section=food'.format(\n",
    "            CLIENT_ID, \n",
    "            CLIENT_SECRET, \n",
    "            VERSION, \n",
    "            lat, \n",
    "            lng, \n",
    "            radius, \n",
    "            LIMIT)\n",
    "            \n",
    "        # make the GET request\n",
    "        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n",
    "        \n",
    "        # return only relevant information for each nearby venue\n",
    "        venues_list.append([(\n",
    "            name, \n",
    "            lat, \n",
    "            lng, \n",
    "            v['venue']['name'], \n",
    "            v['venue']['location']['lat'], \n",
    "            v['venue']['location']['lng'],  \n",
    "            v['venue']['id'],\n",
    "            v['venue']['categories'][0]['name']) for v in results])\n",
    "\n",
    "    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n",
    "    nearby_venues.columns = ['Neighborhood', \n",
    "                  'Neighborhood Latitude', \n",
    "                  'Neighborhood Longitude', \n",
    "                  'Venue', \n",
    "                  'Venue Latitude', \n",
    "                  'Venue Longitude',\n",
    "                'Venue id',\n",
    "                  'Venue Category']\n",
    "    \n",
    "    return(nearby_venues)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Barnet\n",
      "Bexley\n",
      "Brent\n",
      "Bromley\n",
      "Camden\n",
      "Croydon\n",
      "Ealing\n",
      "Enfield\n",
      "Hackney\n",
      "Haringey\n",
      "Harrow\n",
      "Havering\n",
      "Hillingdon\n",
      "Hounslow\n",
      "Islington\n",
      "Kingston upon Thames\n",
      "Lambeth\n",
      "Lewisham\n",
      "Merton\n",
      "Newham\n",
      "Redbridge\n",
      "Richmond upon Thames\n",
      "Southwark\n",
      "Sutton\n",
      "Tower Hamlets\n",
      "Waltham Forest\n",
      "Wandsworth\n",
      "Westminster\n"
     ]
    }
   ],
   "source": [
    "#get venues for each london borough\n",
    "london_venues = getNearbyVenues(names=df_lond['Borough'],\n",
    "                                   latitudes=df_lond['lat'],\n",
    "                                   longitudes=df_lond['lng']\n",
    "                                  )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "      <th>Neighborhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue id</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>51.6252</td>\n",
       "      <td>-0.1517</td>\n",
       "      <td>The Atrium</td>\n",
       "      <td>51.624726</td>\n",
       "      <td>-0.151933</td>\n",
       "      <td>4f673629e4b0777dfed6cc27</td>\n",
       "      <td>Café</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>51.6252</td>\n",
       "      <td>-0.1517</td>\n",
       "      <td>Deli at Number 4</td>\n",
       "      <td>51.625583</td>\n",
       "      <td>-0.152886</td>\n",
       "      <td>4f69dc6de4b03edc4c39e8f7</td>\n",
       "      <td>Diner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>51.6252</td>\n",
       "      <td>-0.1517</td>\n",
       "      <td>Diamond Kebabs</td>\n",
       "      <td>51.624550</td>\n",
       "      <td>-0.153290</td>\n",
       "      <td>524ed7d411d29e3a021bb754</td>\n",
       "      <td>Turkish Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>51.6252</td>\n",
       "      <td>-0.1517</td>\n",
       "      <td>Oakleigh Cafe</td>\n",
       "      <td>51.623412</td>\n",
       "      <td>-0.154899</td>\n",
       "      <td>501b7763e4b01e9e716e76eb</td>\n",
       "      <td>Café</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Bexley</td>\n",
       "      <td>51.4549</td>\n",
       "      <td>0.1505</td>\n",
       "      <td>Zizzi</td>\n",
       "      <td>51.455929</td>\n",
       "      <td>0.150555</td>\n",
       "      <td>4e8367d5be7bdd8e4e80dcf7</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Neighborhood  Neighborhood Latitude  Neighborhood Longitude  \\\n",
       "0       Barnet                51.6252                 -0.1517   \n",
       "1       Barnet                51.6252                 -0.1517   \n",
       "2       Barnet                51.6252                 -0.1517   \n",
       "3       Barnet                51.6252                 -0.1517   \n",
       "4       Bexley                51.4549                  0.1505   \n",
       "\n",
       "              Venue  Venue Latitude  Venue Longitude  \\\n",
       "0        The Atrium       51.624726        -0.151933   \n",
       "1  Deli at Number 4       51.625583        -0.152886   \n",
       "2    Diamond Kebabs       51.624550        -0.153290   \n",
       "3     Oakleigh Cafe       51.623412        -0.154899   \n",
       "4             Zizzi       51.455929         0.150555   \n",
       "\n",
       "                   Venue id      Venue Category  \n",
       "0  4f673629e4b0777dfed6cc27                Café  \n",
       "1  4f69dc6de4b03edc4c39e8f7               Diner  \n",
       "2  524ed7d411d29e3a021bb754  Turkish Restaurant  \n",
       "3  501b7763e4b01e9e716e76eb                Café  \n",
       "4  4e8367d5be7bdd8e4e80dcf7  Italian Restaurant  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "london_venues.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Number</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Inner</th>\n",
       "      <th>Status</th>\n",
       "      <th>Local authority</th>\n",
       "      <th>Political control</th>\n",
       "      <th>Headquarters</th>\n",
       "      <th>Area (sq mi)</th>\n",
       "      <th>Population (2013 est)[1]</th>\n",
       "      <th>Co-ordinates</th>\n",
       "      <th>Nr. in map</th>\n",
       "      <th>Population density</th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "      <th>Avg price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>4</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Barnet London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>North London Business Park, Oakleigh Road South</td>\n",
       "      <td>33.49</td>\n",
       "      <td>369088</td>\n",
       "      <td>﻿51.6252°N 0.1517°W</td>\n",
       "      <td>31</td>\n",
       "      <td>11020.842042</td>\n",
       "      <td>51.6252</td>\n",
       "      <td>-0.1517</td>\n",
       "      <td>523068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Bexley</td>\n",
       "      <td>12</td>\n",
       "      <td>Bexley</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Bexley London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>Civic Offices, 2 Watling Street</td>\n",
       "      <td>23.38</td>\n",
       "      <td>236687</td>\n",
       "      <td>﻿51.4549°N 0.1505°E</td>\n",
       "      <td>23</td>\n",
       "      <td>10123.481608</td>\n",
       "      <td>51.4549</td>\n",
       "      <td>0.1505</td>\n",
       "      <td>332290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Brent</td>\n",
       "      <td>34</td>\n",
       "      <td>Brent</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Brent London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Brent Civic Centre, Engineers Way</td>\n",
       "      <td>16.70</td>\n",
       "      <td>317264</td>\n",
       "      <td>﻿51.5588°N 0.2817°W</td>\n",
       "      <td>12</td>\n",
       "      <td>18997.844311</td>\n",
       "      <td>51.5588</td>\n",
       "      <td>-0.2817</td>\n",
       "      <td>494761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Bromley</td>\n",
       "      <td>35</td>\n",
       "      <td>Bromley</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Bromley London Borough Council</td>\n",
       "      <td>Conservative</td>\n",
       "      <td>Civic Centre, Stockwell Close</td>\n",
       "      <td>57.97</td>\n",
       "      <td>317899</td>\n",
       "      <td>﻿51.4039°N 0.0198°E</td>\n",
       "      <td>20</td>\n",
       "      <td>5483.853717</td>\n",
       "      <td>51.4039</td>\n",
       "      <td>0.0198</td>\n",
       "      <td>446116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Camden</td>\n",
       "      <td>52</td>\n",
       "      <td>Camden</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Camden London Borough Council</td>\n",
       "      <td>Labour</td>\n",
       "      <td>Camden Town Hall, Judd Street</td>\n",
       "      <td>8.40</td>\n",
       "      <td>229719</td>\n",
       "      <td>﻿51.5290°N 0.1255°W</td>\n",
       "      <td>11</td>\n",
       "      <td>27347.500000</td>\n",
       "      <td>51.5290</td>\n",
       "      <td>-0.1255</td>\n",
       "      <td>793557</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Neighborhood  Number  Borough Inner Status                 Local authority  \\\n",
       "0       Barnet       4   Barnet   NaN    NaN   Barnet London Borough Council   \n",
       "1       Bexley      12   Bexley   NaN    NaN   Bexley London Borough Council   \n",
       "2        Brent      34    Brent   NaN    NaN    Brent London Borough Council   \n",
       "3      Bromley      35  Bromley   NaN    NaN  Bromley London Borough Council   \n",
       "4       Camden      52   Camden   NaN    NaN   Camden London Borough Council   \n",
       "\n",
       "  Political control                                     Headquarters  \\\n",
       "0      Conservative  North London Business Park, Oakleigh Road South   \n",
       "1      Conservative                  Civic Offices, 2 Watling Street   \n",
       "2            Labour                Brent Civic Centre, Engineers Way   \n",
       "3      Conservative                    Civic Centre, Stockwell Close   \n",
       "4            Labour                    Camden Town Hall, Judd Street   \n",
       "\n",
       "   Area (sq mi)  Population (2013 est)[1]          Co-ordinates  Nr. in map  \\\n",
       "0         33.49                    369088   ﻿51.6252°N 0.1517°W          31   \n",
       "1         23.38                    236687   ﻿51.4549°N 0.1505°E          23   \n",
       "2         16.70                    317264   ﻿51.5588°N 0.2817°W          12   \n",
       "3         57.97                    317899   ﻿51.4039°N 0.0198°E          20   \n",
       "4          8.40                    229719   ﻿51.5290°N 0.1255°W          11   \n",
       "\n",
       "   Population density      lat     lng Avg price  \n",
       "0        11020.842042  51.6252 -0.1517    523068  \n",
       "1        10123.481608  51.4549  0.1505    332290  \n",
       "2        18997.844311  51.5588 -0.2817    494761  \n",
       "3         5483.853717  51.4039  0.0198    446116  \n",
       "4        27347.500000  51.5290 -0.1255    793557  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#merge datasets\n",
    "\n",
    "london_counts=london_venues.groupby(\"Neighborhood\").count().reset_index().iloc[:,0:2].rename(columns={'Neighborhood Latitude': 'Number'})\n",
    "london_info=london_counts.merge(df_lond,left_on=\"Neighborhood\",right_on=\"Borough\")\n",
    "london_info.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "london_info.plot(x='Population density', y='Number', style='o')  \n",
    "plt.title('Food Venue Count vs Borough Population Density')  \n",
    "plt.xlabel('Population Density')  \n",
    "plt.ylabel('Count')  \n",
    "\n",
    "z = np.polyfit(london_info['Population density'], london_info['Number'], 1)\n",
    "p = np.poly1d(z)\n",
    "plt.plot(london_info['Population density'],p(london_info['Population density']),\"r--\")\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.11152659026429901"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split \n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import r2_score\n",
    "X=london_info[\"Population density\"].values.reshape(-1,1)\n",
    "Y=london_info[\"Number\"].values.reshape(-1,1)\n",
    "\n",
    "regressor = LinearRegression()  \n",
    "regressor.fit(X, Y)\n",
    "\n",
    "y_pred=regressor.predict(X)\n",
    "\n",
    "r2_score(Y, y_pred)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getVenueslikes(venue_id):\n",
    "    \n",
    "    venues_list=[]\n",
    "    for venue in venue_id:\n",
    "            \n",
    "        # create the API request URL\n",
    "        url = 'https://api.foursquare.com/v2/venues/{}/likes?&client_id={}&client_secret={}&v={}'.format(\n",
    "            venue,\n",
    "            CLIENT_ID, \n",
    "            CLIENT_SECRET, \n",
    "            VERSION \n",
    "           )\n",
    "            \n",
    "        # make the GET request\n",
    "        results = requests.get(url).json()[\"response\"][\"likes\"]\n",
    "        \n",
    "        # return only relevant information for each nearby venue\n",
    "        venues_list.append([(\n",
    "            venue,\n",
    "            results['count'])for v in results])\n",
    "\n",
    "    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n",
    "    nearby_venues.columns = ['Venue id','Likes']\n",
    "    \n",
    "    return(nearby_venues)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "d=getVenueslikes(london_venues[\"Venue id\"])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Venue id</th>\n",
       "      <th>Likes</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>4f673629e4b0777dfed6cc27</td>\n",
       "      <td>1</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>51.6252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>4f673629e4b0777dfed6cc27</td>\n",
       "      <td>1</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>51.6252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>4f673629e4b0777dfed6cc27</td>\n",
       "      <td>1</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>51.6252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4f69dc6de4b03edc4c39e8f7</td>\n",
       "      <td>0</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>51.6252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>524ed7d411d29e3a021bb754</td>\n",
       "      <td>0</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>51.6252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2315</td>\n",
       "      <td>5aa1345ba92d981167b60b1d</td>\n",
       "      <td>4</td>\n",
       "      <td>Westminster</td>\n",
       "      <td>51.4973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2316</td>\n",
       "      <td>5aa1345ba92d981167b60b1d</td>\n",
       "      <td>4</td>\n",
       "      <td>Westminster</td>\n",
       "      <td>51.4973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2317</td>\n",
       "      <td>4bb34cf6715eef3b6f2086bb</td>\n",
       "      <td>1</td>\n",
       "      <td>Westminster</td>\n",
       "      <td>51.4973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2318</td>\n",
       "      <td>4bb34cf6715eef3b6f2086bb</td>\n",
       "      <td>1</td>\n",
       "      <td>Westminster</td>\n",
       "      <td>51.4973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2319</td>\n",
       "      <td>4bb34cf6715eef3b6f2086bb</td>\n",
       "      <td>1</td>\n",
       "      <td>Westminster</td>\n",
       "      <td>51.4973</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2320 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Venue id  Likes Neighborhood  Neighborhood Latitude\n",
       "0     4f673629e4b0777dfed6cc27      1       Barnet                51.6252\n",
       "1     4f673629e4b0777dfed6cc27      1       Barnet                51.6252\n",
       "2     4f673629e4b0777dfed6cc27      1       Barnet                51.6252\n",
       "3     4f69dc6de4b03edc4c39e8f7      0       Barnet                51.6252\n",
       "4     524ed7d411d29e3a021bb754      0       Barnet                51.6252\n",
       "...                        ...    ...          ...                    ...\n",
       "2315  5aa1345ba92d981167b60b1d      4  Westminster                51.4973\n",
       "2316  5aa1345ba92d981167b60b1d      4  Westminster                51.4973\n",
       "2317  4bb34cf6715eef3b6f2086bb      1  Westminster                51.4973\n",
       "2318  4bb34cf6715eef3b6f2086bb      1  Westminster                51.4973\n",
       "2319  4bb34cf6715eef3b6f2086bb      1  Westminster                51.4973\n",
       "\n",
       "[2320 rows x 4 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "venue_likes=d.merge(london_venues,on='Venue id').iloc[:,[0,1,2,3]]\n",
    "venue_likes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Likes</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Avg price</th>\n",
       "      <th>lng</th>\n",
       "      <th>lat</th>\n",
       "      <th>Population density</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>523068</td>\n",
       "      <td>-0.1517</td>\n",
       "      <td>51.6252</td>\n",
       "      <td>11020.842042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>144</td>\n",
       "      <td>Bexley</td>\n",
       "      <td>332290</td>\n",
       "      <td>0.1505</td>\n",
       "      <td>51.4549</td>\n",
       "      <td>10123.481608</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1395</td>\n",
       "      <td>Brent</td>\n",
       "      <td>494761</td>\n",
       "      <td>-0.2817</td>\n",
       "      <td>51.5588</td>\n",
       "      <td>18997.844311</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>810</td>\n",
       "      <td>Bromley</td>\n",
       "      <td>446116</td>\n",
       "      <td>0.0198</td>\n",
       "      <td>51.4039</td>\n",
       "      <td>5483.853717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>16689</td>\n",
       "      <td>Camden</td>\n",
       "      <td>793557</td>\n",
       "      <td>-0.1255</td>\n",
       "      <td>51.5290</td>\n",
       "      <td>27347.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>1341</td>\n",
       "      <td>Croydon</td>\n",
       "      <td>369161</td>\n",
       "      <td>-0.0977</td>\n",
       "      <td>51.3714</td>\n",
       "      <td>11156.899132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>2655</td>\n",
       "      <td>Ealing</td>\n",
       "      <td>479648</td>\n",
       "      <td>-0.3089</td>\n",
       "      <td>51.5130</td>\n",
       "      <td>15974.533582</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>435</td>\n",
       "      <td>Enfield</td>\n",
       "      <td>386930</td>\n",
       "      <td>-0.0799</td>\n",
       "      <td>51.6538</td>\n",
       "      <td>10098.424701</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>4593</td>\n",
       "      <td>Hackney</td>\n",
       "      <td>566567</td>\n",
       "      <td>-0.0553</td>\n",
       "      <td>51.5450</td>\n",
       "      <td>34969.972826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>374</td>\n",
       "      <td>Haringey</td>\n",
       "      <td>546294</td>\n",
       "      <td>-0.1119</td>\n",
       "      <td>51.6000</td>\n",
       "      <td>23063.572680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>93</td>\n",
       "      <td>Harrow</td>\n",
       "      <td>458835</td>\n",
       "      <td>-0.3346</td>\n",
       "      <td>51.5898</td>\n",
       "      <td>12487.018984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>93</td>\n",
       "      <td>Havering</td>\n",
       "      <td>364998</td>\n",
       "      <td>0.1837</td>\n",
       "      <td>51.5812</td>\n",
       "      <td>5584.313725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>942</td>\n",
       "      <td>Hillingdon</td>\n",
       "      <td>405612</td>\n",
       "      <td>-0.4760</td>\n",
       "      <td>51.5441</td>\n",
       "      <td>6420.550705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>33</td>\n",
       "      <td>Hounslow</td>\n",
       "      <td>412065</td>\n",
       "      <td>-0.3680</td>\n",
       "      <td>51.4746</td>\n",
       "      <td>12142.850532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>9655</td>\n",
       "      <td>Islington</td>\n",
       "      <td>661003</td>\n",
       "      <td>-0.1022</td>\n",
       "      <td>51.5416</td>\n",
       "      <td>37572.648084</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>3714</td>\n",
       "      <td>Kingston upon Thames</td>\n",
       "      <td>506583</td>\n",
       "      <td>-0.3064</td>\n",
       "      <td>51.4085</td>\n",
       "      <td>11598.956885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>9609</td>\n",
       "      <td>Lambeth</td>\n",
       "      <td>515583</td>\n",
       "      <td>-0.1163</td>\n",
       "      <td>51.4607</td>\n",
       "      <td>30332.239382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>156</td>\n",
       "      <td>Lewisham</td>\n",
       "      <td>425474</td>\n",
       "      <td>-0.0209</td>\n",
       "      <td>51.4452</td>\n",
       "      <td>21089.167281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18</td>\n",
       "      <td>201</td>\n",
       "      <td>Merton</td>\n",
       "      <td>515675</td>\n",
       "      <td>-0.1958</td>\n",
       "      <td>51.4014</td>\n",
       "      <td>13996.074380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19</td>\n",
       "      <td>294</td>\n",
       "      <td>Newham</td>\n",
       "      <td>381220</td>\n",
       "      <td>0.0469</td>\n",
       "      <td>51.5077</td>\n",
       "      <td>22763.018598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20</td>\n",
       "      <td>255</td>\n",
       "      <td>Redbridge</td>\n",
       "      <td>426633</td>\n",
       "      <td>0.0741</td>\n",
       "      <td>51.5590</td>\n",
       "      <td>13235.629017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21</td>\n",
       "      <td>684</td>\n",
       "      <td>Richmond upon Thames</td>\n",
       "      <td>650810</td>\n",
       "      <td>-0.3260</td>\n",
       "      <td>51.4479</td>\n",
       "      <td>8631.709517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22</td>\n",
       "      <td>14949</td>\n",
       "      <td>Southwark</td>\n",
       "      <td>508698</td>\n",
       "      <td>-0.0804</td>\n",
       "      <td>51.5035</td>\n",
       "      <td>26792.100539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23</td>\n",
       "      <td>408</td>\n",
       "      <td>Sutton</td>\n",
       "      <td>372832</td>\n",
       "      <td>-0.1945</td>\n",
       "      <td>51.3618</td>\n",
       "      <td>11572.002363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>24</td>\n",
       "      <td>213</td>\n",
       "      <td>Tower Hamlets</td>\n",
       "      <td>438037</td>\n",
       "      <td>-0.0059</td>\n",
       "      <td>51.5099</td>\n",
       "      <td>35765.399738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25</td>\n",
       "      <td>264</td>\n",
       "      <td>Waltham Forest</td>\n",
       "      <td>444319</td>\n",
       "      <td>-0.0134</td>\n",
       "      <td>51.5908</td>\n",
       "      <td>17731.621081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>26</td>\n",
       "      <td>1125</td>\n",
       "      <td>Wandsworth</td>\n",
       "      <td>602178</td>\n",
       "      <td>-0.1910</td>\n",
       "      <td>51.4567</td>\n",
       "      <td>23470.597128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>27</td>\n",
       "      <td>6693</td>\n",
       "      <td>Westminster</td>\n",
       "      <td>897094</td>\n",
       "      <td>-0.1372</td>\n",
       "      <td>51.4973</td>\n",
       "      <td>27363.208685</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Likes               Borough Avg price     lng      lat  Population density\n",
       "0       3                Barnet    523068 -0.1517  51.6252        11020.842042\n",
       "1     144                Bexley    332290  0.1505  51.4549        10123.481608\n",
       "2    1395                 Brent    494761 -0.2817  51.5588        18997.844311\n",
       "3     810               Bromley    446116  0.0198  51.4039         5483.853717\n",
       "4   16689                Camden    793557 -0.1255  51.5290        27347.500000\n",
       "5    1341               Croydon    369161 -0.0977  51.3714        11156.899132\n",
       "6    2655                Ealing    479648 -0.3089  51.5130        15974.533582\n",
       "7     435               Enfield    386930 -0.0799  51.6538        10098.424701\n",
       "8    4593               Hackney    566567 -0.0553  51.5450        34969.972826\n",
       "9     374              Haringey    546294 -0.1119  51.6000        23063.572680\n",
       "10     93                Harrow    458835 -0.3346  51.5898        12487.018984\n",
       "11     93              Havering    364998  0.1837  51.5812         5584.313725\n",
       "12    942            Hillingdon    405612 -0.4760  51.5441         6420.550705\n",
       "13     33              Hounslow    412065 -0.3680  51.4746        12142.850532\n",
       "14   9655             Islington    661003 -0.1022  51.5416        37572.648084\n",
       "15   3714  Kingston upon Thames    506583 -0.3064  51.4085        11598.956885\n",
       "16   9609               Lambeth    515583 -0.1163  51.4607        30332.239382\n",
       "17    156              Lewisham    425474 -0.0209  51.4452        21089.167281\n",
       "18    201                Merton    515675 -0.1958  51.4014        13996.074380\n",
       "19    294                Newham    381220  0.0469  51.5077        22763.018598\n",
       "20    255             Redbridge    426633  0.0741  51.5590        13235.629017\n",
       "21    684  Richmond upon Thames    650810 -0.3260  51.4479         8631.709517\n",
       "22  14949             Southwark    508698 -0.0804  51.5035        26792.100539\n",
       "23    408                Sutton    372832 -0.1945  51.3618        11572.002363\n",
       "24    213         Tower Hamlets    438037 -0.0059  51.5099        35765.399738\n",
       "25    264        Waltham Forest    444319 -0.0134  51.5908        17731.621081\n",
       "26   1125            Wandsworth    602178 -0.1910  51.4567        23470.597128\n",
       "27   6693           Westminster    897094 -0.1372  51.4973        27363.208685"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "venue_likes_grouped = venue_likes.groupby(\"Neighborhood\").sum()\n",
    "venue_likes_grouped_info=venue_likes_grouped.merge(df_lond,left_on=\"Neighborhood\",right_on=\"Borough\").iloc[:,[0,2,-1,-2,-3,-4]]\n",
    "venue_likes_grouped_info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "venue_likes_grouped_info.plot(x='Population density', y='Likes', style='o')  \n",
    "plt.title('Total venue likes vs Borough Population Density')  \n",
    "plt.xlabel('Population Density')  \n",
    "plt.ylabel('Count')  \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3235399039894933"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from scipy import stats\n",
    "\n",
    "X_2=venue_likes_grouped_info[\"Population density\"].values.reshape(-1,1)\n",
    "Y_2=venue_likes_grouped_info[\"Likes\"].values.reshape(-1,1)\n",
    "\n",
    "regressor2 = LinearRegression()  \n",
    "regressor2.fit(X_2, Y_2)\n",
    "\n",
    "y_pred2=regressor2.predict(X_2)\n",
    "\n",
    "r2_score(Y_2, y_pred2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 0.0\n",
      "1 0.3235399039894933\n",
      "2 0.3235400702421294\n",
      "3 0.41969550837926084\n",
      "4 0.46517254058849167\n",
      "5 0.45342332906452343\n",
      "6 0.4302161242651724\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "for i in range(7):\n",
    "    \n",
    "    poly = PolynomialFeatures(i)\n",
    "\n",
    "    X_p=poly.fit_transform(X_2)\n",
    "    Y_p= poly.fit_transform(Y_2)\n",
    "\n",
    "    regressorpoly = LinearRegression()  \n",
    "    regressorpoly.fit(X_p, Y_2)\n",
    "\n",
    "    y_pred_p=regressorpoly.predict(X_p)\n",
    "    \n",
    "    print(i,r2_score(Y_2,y_pred_p))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "poly = PolynomialFeatures(4)\n",
    "X_p=poly.fit_transform(X_2)\n",
    "Y_p= poly.fit_transform(Y_2)\n",
    "\n",
    "regressorpoly = LinearRegression()  \n",
    "regressorpoly.fit(X_p, Y_2)\n",
    "\n",
    "y_pred_p=regressorpoly.predict(X_p)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZEAAAEWCAYAAACnlKo3AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAgAElEQVR4nO3de7xVdZ3/8ddbQDnkBRNsBORSo6ZmgZ4pL1naDTRL7GIaGVM25JiV4y9mZGxGKx2daLS7Dk0kTqRZKTmlkZmmUV4wCK8oKipgiih44WiAn98f3++GdQ77HPbZ5+y9z+X9fDz2Y+/9Xbfvd6+112et73et71JEYGZmVo3tGp0BMzPrvRxEzMysag4iZmZWNQcRMzOrmoOImZlVzUHEzMyq5iDSy0gaLCkkjWp0Xqol6VZJH8ufT5b0f/lzry9bT9NbflNJf5H01iqnfZekP3d3nhpJ0pckfbvR+aiEg0g3kPRC4fWKpJbC9ynbmHaSpGX1ymtPExHfj4j3NTofnVHYMb+Y1/HTkv5X0k6NzltXSbpA0oZcrrWSfi/p7xqdr5JyQTEifhMRb6rBsl6fl1X6L/9F0jWSjuzuZbUVEWdHxGmFfGys9TKr5SDSDSJix9ILeAx4XyFtbqPzZzWzT17nfwuMBM6qZiaSBnZrrrpuTi7X7sCdwE8anJ9G2lT4b08AbgZ+IemEBuerx3AQqQNJTZK+I+kJSSskzZQ0SNJuwNXAawtHO7tJOkzSbZLWSVol6aJKdjSS/l7S79ukzZB0ZSEfX5f0eD6q+pakHfKwSZKWSfpXSaslrSyeRRWroPL3UyT9pvD9DZJ+K+lZSfdJmlzhb9NqPm2GHZnzeti2liHpWEn3S3o+T/O5MvN7Vf6N/7aQNjKfOe4q6W8k/Sofga+R9NtKyhARa4FfAPsV5jta0rWSnpH0gKSphWEXSPqRpB9Leh44ob1tpNxv1PZoXNLukq6T9FxeTxeU+U2PkvRQ/u0uqrBcfwUuA8ZI2lHSAKVqlsckPSlpdunsq3S0nPP6RN5uP1vI8xWSvlj43u4Z+Da2/5vz+9K8Lie3nZekAyTdktfjEklHtcnH1yXNz9vKAkljKvw9noiIrwHnAzML89xT0s+VzkgflnRKYdgFkuZKujwvb4mk8YXh/5Z/r+fyNn14Ybr/KZR5gLbsIw7L4+9VmM8oSeslDa2kLN3JQaQ+vgS8ETgAOAg4AvjniFgDHAc8XDhzWQNsAE4DXg0cDrwP+FQFy7kKOFDS6ELaR4Ef5c8XAaNyPvYB9gbOLIw7BhAwIi//Ekk7bmuhknYGrge+DwwDPg7MLu6sO0vS+4E5wPsjYkEFy5gNfDwidgLGA7e0nWdEvAhcA5xYSD4BmB8RzwL/AizN898DOKfCvO4GvB+4tZD8kzyvPUjr4KJSMMw+mMu3C/Az2tlGKlk+MAtYDbwGmAZMLTPOUaQj6QOBT0g6ooJyDc7zWhYRLwCfBo4nbZN7kc5ULixMMgA4BHgt8F7gS6qunaOj7f9t+X2f/H+ZVybPvwDmAcOB6cBPJI0rjPZRYEae/xOk374zrgJGSRonaQBwLfAH0v9mEvCvkt5eGP840vY5FLgB+HrO65uAT5C2111Iv9mKMst7G4UzoohYAPwU+FhhnCnAL/MBTV05iNTHFODsiHg6Ip4EzgVOam/kiLg9Iu6IiE0R8RDwP8Db2xu/MN1zpA36BEhH7qSgcW0+kvsk8PmIWBsR64ALSuNm64HzI2JDRFwNBKmqZluOA+6OiLk5z3cA/0faUVZjCvAN4D0RsajCZWwE9pe0U0SsKUzX1o9oHUSKQXYDaUcwOiL+GhE3t524jXskrSXtwIeRAhz5CPFNwL9GxMsRsZAUMIrr/HcRcW1EvBIRLXRyGynJO833A/8WES0RsQQoV4X6HxHxXEQ8QjqyHV9mnJKTcrkeA/Zly288BZgZEY/mbe0sYIokFaY9O+djEfBDWv/WFal2+88Oz+8X5u14Pung4yOFca6MiD9FxAbSuu/otyhnVX5/NfBWYHBE/GfeZh4AfkDr/9VvI+L6iNgE/G9heRuBJtIZ7ICIeDivn0rMIa2Pko/lededg0iN5T/Y3wCPFpIfJdWhtzfNfrl64klJzwH/TtpJVaK4k5wC/DRXS4wABpF3fHknMY90NFmyOiJeKXxfD2zzTIR0BvO20nzzvD9IOgqvxhnADyPi/k4sY3L+/phSlVdzO/OeD7xG0psk7U06ov6/POw80g7iRqWqvTO2kc/9I2IoMJhU7XOzpO1Jv/XqHBxK2q7zx0sfqtlGCv6GdPZYPIJ9vMx4fyl83tZ6/d+IGBoRu0fEu3NgglSutnlsIu1Myy370TxNp3Rx+x8BPBate5Zt+1t25rcopzSvZ0jb5dg22+UZpPXS4fIi4h5STcB5wFO52us1FeahVMV1SK4e2wO4rpPl6BYOIjWWN+a/kDa2ktHAytIoZSb7HvAn4HURsTPwZdKOohK/BMZJ2pd0NFQ6yn6CdOTzuryDGBoRu0TEbhXO90VgSOF78U/yOPDrwnyH5tPu0yucd1vHAR8r1i1vaxkR8ceIOIZUpfNr4PJyM85Hnz8lBdopwNWlnX1ErIuIz0fEGFJA+mKbKqiycpD+Pql6cG9SIBouqakwWnGdQ2G9V7CNdPTb/yXPq7iT3HNbea7SKrbOYwtpZ1pu2aPZctTeURna6mj731a346vycova/vZddRywIp81PA7c32a73CkijqtkRhExJyIOJVUBDiadgW41WpnpgnTg8jHSGesVeduuOweR+rgcOFup0Xx3UjXAD/OwJ4Hd27Q97ASsi4gXJO0P/EOlC4qIl0mN9d8Etgd+l9M3kOplvyFpmJI9Jb27wlkvBj6k1Kj7euDvC8PmARMkfUTpgoHtJR2cj/Sr8RjwTlLd8ie3tQylBvMTcrvJBuB5YFMH8/8RKcCeyJYgi6T353puAevyPDqaT2m6gaTf4wXSUe8yYAlwrqQdJB1Ialvo6Eq9jraRxbns+0saQjoyByAiXiKdSX0pr5s3kKroauFy4AtKFw3sRNrh/ajNUf/ZShcJvIm0c/txoQzHSBoqaSTwWdrX7vaft+91pJ1uObcA20k6XdLAvH2/h264wkzpwot/IrWnlNoSf5+HnZ5//4GS3pjX+bbmt5+ktytd3NKSX+W2t6dIZx1tg+NlpDaqE/PnhnAQqY9/B+4F7iH9mRYAX83D/kxq7H00nw6/Gvgn4FOSXgC+w5Y/YqV+BLyLdHRSrJ46nXSktpD0R/wVlbV5kPM7kFT/P4stOzhyo/REUiPhE3kZ55Kqz6oSEQ+TAsmXJZ1UwTI+SdqBryM1updrXC65mdQIvAtQvIppX+AmUhC6GfhaRNy61dRbLM3r6BnSn/nYiHg+71SPJ9V1/4W0/qZHxFaN/QXtbiMRcVf+fAtwf85j0afJVWik9oPLgZc7WFa1LiY1Kv8BeIhU7mKV3ybgNuAR0rb15UK70mxScH2M1PBd9kwx29b2/++kxvK1ShdgbJaD6jHAh4A1pIb/j+S2lWqUrop6kfRffSdpPc/Ny9sAHA0cStr+VpN+p0qqyJqA/wKeJm3TO1I4QCiU6VnS+r8zl3l8Tn+IdPHG8xFxe5Xl6zKFH0pl1qdI+gapsffTdVzm60kXPvS0e176NEk/Au6NiHLVYHXhMxGzXk7p/pn9cxXloaQzsasbnS+rLaXL248hXQ3WMA4iZr3fLqR2kRdJ1YznRsSvGpslqyVJXwUWkaoMu/Oigc7npVbVWZJmk6LkUxHxhpz2Y9JNbpBuvFkbEeMljQXuI9XvAdwaEafkaQ4CLiXVH15Lus8hctvBj4GxwHLg+Fx3aGZmdVLLM5FLSXdvbhYRH4mI8RExnnSX7lWFwQ+VhpUCSHYx6S7cvfKrNM8zgRsiYi/SXaDFO6/NzKwOatYIFhE35zOMreRLKI8H3tHRPCTtAewcEX/M3y8j3VR2HXAsqWsISHdv3kTqtqJDw4YNi7Fjy2bLzMzaceeddz4dEcPbpjfqSorDgScj4sFC2jhJi4DngC/myyFH0vpO3BVsuanqNRHxBKSO0fK19WVJmkY6m2H06NEsXLiw+0piZtYPSHq0XHqjGtZPpPV14k+Q+iuaQLru/Ef5xrFyd2l3uhEnImZFRHNENA8fvlUgNTOzKtX9TCTf3fsBUk+lwOa7UF/On++U9BCp+4gVpA4ES0axpRuFJyXtkc9C9iDd1WlmZnXUiDORd5H6mtlcTSVpuFKXykh6LakB/eFcXfV87t5CpOvff54nu4YtdyVPLaSbmVmd1OxMRNLlpIbvYZJWkLqI/j6pz6K2XR68jdS9xUZS1wmnRESpU7d/ZMslvtexpafKC4ArJZ1M6krhw7Uqi5n1Txs2bGDFihW89NJLjc5K3QwePJhRo0YxaFBlvRb1u25Pmpubww3rZlaJRx55hJ122onddtsNqdKOtHuviGDNmjU8//zzjBs3rtUwSXdGxFaPWHA/N2ZWd/MWrWTm/KWsWtvCiKFNTJ+4D5MnVPL4lPp66aWXGDt2bL8IIACS2G233Vi9enXF0ziImFldzVu0khlX3UXLhtTr+cq1Lcy46i6AHhlI+ksAKelsed13lpnV1cz5SzcHkJKWDZuYOX9pO1NYT+YgYmZ1tWptS6fS+7sdd9z60SSXXHIJl12WnkN1xBFHNPQGaldnmVldjRjaxMoyAWPE0KYyY/cu9WrrOeWUU7Y9Up34TMTM6mr6xH1oGjSgVVrToAFMn7hPO1P0DqW2npVrWwi2tPXMW9T9PbWfc845fO1rX2uV9sorrzB16lS++MUvAvDrX/+aQw45hAMPPJAPf/jDvPDCCwCceeaZ7LfffrzxjW/kC1/4Qpfz4iBiZnU1ecJIzv/AAYwc2oSAkUObOP8DB/TIRvXOaGRbz8aNG5kyZQp777035557Lk8//TTnnnsuv/nNb/jTn/5Ec3MzF154Ic888wxXX30199xzD0uWLNkccLrC1VlmVneTJ4zs9UGjrUa29Xz605/m+OOP56yzzgLg1ltv5d577+Wwww4D4K9//SuHHHIIO++8M4MHD+ZTn/oU733veznmmGO6vGyfiZiZdYP22nTq0dZz6KGHcuONN26+sz4iePe7383ixYtZvHgx9957L9///vcZOHAgt99+Ox/84AeZN28ekyZN2sact81BxMysGzSyrefkk0/m6KOP5sMf/jAbN27k4IMPZsGCBSxbtgyA9evX88ADD/DCCy+wbt06jj76aL7+9a+zePHiLi/b1VlmZt2gVD3X3VdnrV+/nlGjtnRmfsYZZ5Qd74wzzmDdunWcdNJJzJ07l0svvZQTTzyRl19+GYBzzz2XnXbaiWOPPZaXXnqJiOCiiy7qUt7AfWeZmbXrvvvuY9999210NuquXLnb6zvL1VlmZlY1BxEzM6uag4iZmVXNQcTMzKrmIGJmZlVzEDEzs6o5iJiZ9WADBgxg/Pjxm1/Lly9n4cKFfO5znwPgpptu4g9/+EPD8uebDc3MerCmpqat7iwfO3Yszc3plo2bbrqJHXfckUMPPbQR2avdmYik2ZKeknR3Ie0cSSslLc6vowvDZkhaJmmppImF9Ek5bZmkMwvp4yTdJulBST+WtH2tymJmVpG5c2HsWNhuu/Q+d25NFnPTTTdxzDHHsHz5ci655BIuuugixo8fzy233FKT5XWklmcilwLfBi5rk35RRLTqCF/SfsAJwP7ACOA3kvbOg78DvBtYAdwh6ZqIuBf4zzyvKyRdApwMXFyrwphZ59XrIU09wty5MG0arF+fvj/6aPoOMGVK1bNtaWlh/PjxAIwbN46rr75687CxY8dyyimnsOOOO3bLs0GqUbMgEhE3Sxpb4ejHAldExMvAI5KWAW/Ow5ZFxMMAkq4AjpV0H/AO4KN5nDnAOTiImPUYpYc0lZ6xUXpIE9A3A8lZZ20JICXr16f0LgSRctVZPUkjGtZPk7QkV3ftmtNGAo8XxlmR09pL3w1YGxEb26SXJWmapIWSFq5evbq7ymFmHWjkQ5oa4rHHOpfeR9Q7iFwMvA4YDzwB/FdOV5lxo4r0siJiVkQ0R0Tz8OHDO5djM6tKIx/S1BCjR3cuvZvstNNOPP/88zVdRkfqGkQi4smI2BQRrwDfY0uV1Qpgz8Koo4BVHaQ/DQyVNLBNupn1EI18SFNDnHceDBnSOm3IkJReQ+973/u4+uqrG9awXtcgImmPwtfjgNKVW9cAJ0jaQdI4YC/gduAOYK98Jdb2pMb3ayL1X38j8KE8/VTg5/Uog5lVppEPaWqIKVNg1iwYMwak9D5rVpfaQwBeeOGFrdKOOOIIfvGLXwCw9957s2TJEhYvXszhhx/epWVVo2YN65IuB44AhklaAZwNHCFpPKnqaTnwaYCIuEfSlcC9wEbgMxGxKc/nNGA+MACYHRH35EX8C3CFpHOBRcD3a1UWM+u8Wj2kqUebMqXLQaO38UOpzMza4YdSbeGHUpmZVaG/HWh3trwOImZm7Rg8eDBr1qzpN4EkIlizZg2DBw+ueBr3nWVm1o5Ro0axYsUK+tP9ZYMHD2bUqFEVj+8gYmbWjkGDBjFu3LhGZ6NHc3WWmZlVzUHEzMyq5iBiZmZVcxAxM7OqOYiYmVnVHETMzKxqDiJmZlY1BxEzM6uag4iZmVXNQcTMzKrmIGJmZlVzEDEzs6o5iJiZWdUcRMzMrGoOImZmVjUHETMzq1rNgoik2ZKeknR3IW2mpPslLZF0taShOX2spBZJi/PrksI0B0m6S9IySd+UpJz+aknXS3owv+9aq7KYmVl5tTwTuRSY1CbteuANEfFG4AFgRmHYQxExPr9OKaRfDEwD9sqv0jzPBG6IiL2AG/J3MzOro5oFkYi4GXimTdqvI2Jj/nor0OGDfCXtAewcEX+MiAAuAybnwccCc/LnOYV0MzOrk0a2iXwSuK7wfZykRZJ+J+nwnDYSWFEYZ0VOA3hNRDwBkN93r3WGzcystYGNWKiks4CNwNyc9AQwOiLWSDoImCdpf0BlJo8qljeNVCXG6NGjq8u0mZltpe5nIpKmAscAU3IVFRHxckSsyZ/vBB4C9iadeRSrvEYBq/LnJ3N1V6na66n2lhkRsyKiOSKahw8f3t1FMjPrt+oaRCRNAv4FeH9ErC+kD5c0IH9+LakB/eFcTfW8pIPzVVkfB36eJ7sGmJo/Ty2km5lZndSsOkvS5cARwDBJK4CzSVdj7QBcn6/UvTVfifU24MuSNgKbgFMiotQo/4+kK72aSG0opXaUC4ArJZ0MPAZ8uFZlMTOz8pRrlPqN5ubmWLhwYaOzYWbWq0i6MyKa26b7jnUzM6uag4iZmVXNQcTMzKrmIGJmZlVzEDEzs6o5iJiZWdUcRMzMrGoOImZmVjUHETMzq5qDiJmZVc1BxMzMquYgYmZmVXMQMTOzqjmImJlZ1RxEzMysag4iZmZWNQcRMzOrmoOImZlVzUHEzMyq5iBiZmZVcxAxM7Oq1TSISJot6SlJdxfSXi3pekkP5vddc7okfVPSMklLJB1YmGZqHv9BSVML6QdJuitP801JqmV5zMystVqfiVwKTGqTdiZwQ0TsBdyQvwMcBeyVX9OAiyEFHeBs4C3Am4GzS4EnjzOtMF3bZZmZtTZ3LowdC9ttl97nzm10jnq1mgaRiLgZeKZN8rHAnPx5DjC5kH5ZJLcCQyXtAUwEro+IZyLiWeB6YFIetnNE/DEiArisMC8zs63NnQvTpsGjj0JEep82zYGkCxrRJvKaiHgCIL/vntNHAo8XxluR0zpKX1EmfSuSpklaKGnh6tWru6UQZtYLnXUWrF/fOm39+pRuVelJDevl2jOiivStEyNmRURzRDQPHz68C1k0s17tscc6l27MW7SSwy74Ldv/zd8eVG74wHpnCHhS0h4R8USuknoqp68A9iyMNwpYldOPaJN+U04fVWZ8M7PyRo9m3pCxzHz7VFbtPIwRzz3N9N/NYfL65Y3OWY80b9FKZlx1Fy0bNrU7TiOCyDXAVOCC/P7zQvppkq4gNaKvy4FmPvAfhcb09wAzIuIZSc9LOhi4Dfg48K16FsTMepd5X/gqMx4ZQMugwQCs3GV3Zhz1WRi3yQ2qZcycv7TDAAI1DiKSLiedRQyTtIJ0ldUFwJWSTgYeAz6cR78WOBpYBqwHPgGQg8VXgDvyeF+OiFJj/T+SrgBrAq7LLzOzsma+MIyWQS2t0loGDWbmC00OImWsWtuyzXFqGkQi4sR2Br2zzLgBfKad+cwGZpdJXwi8oSt5NLP+o72dYiU7y/5oxNAmVm7jt+lJDetmZjU1YmhTp9L7u+kT96Fp0IAOx3EQMbN+o9xOsWnQAKZP3KdBOerZJk8YyfkfOICRHQRZpVqk/qO5uTkWLlzY6GyYWYPMW7SSmfOXsmptCyOGNjF94j5MnlD2FjMrkHRnRDS3TW/E1VlmZg0zecJIB41u5OosMzOrWkVBRNJXJe0saZCkGyQ9Leljtc6cmZn1bJWeibwnIp4DjiHdKb43ML1muTIzs16h0iAyKL8fDVxeuNnPzMzqqYd1ZV9pw/r/SbofaAFOlTQceKl22TIzs62UurIv9URc6soeYMqUhmSp4kt8c99Vz0XEJkmvAnaKiL/UNHc14Et8zazXGjs2BY62xoyB5ctruuj2LvGttGF9CKlLkotz0ghgq5mZmVkN9cCu7CttE/kB8Ffg0Px9BXBuTXJkZmbljR7dufQ6qDSIvC4ivgpsAIiIFso/FMrMzGrlvPNgyJDWaUOGpPQGqTSI/FVSE/nJgZJeB7xcs1yZmdnWpkyBWbNSG4iU3mfNalijOlR+ddbZwK+APSXNBQ4D/r5WmTIzs3ZMmdLQoNFWRUEkIq6X9CfgYFI11ucj4uma5szMzHq8Sq/O+nJErImIX0bEL4Bn8hmJmVnnnXoqDByYqmQGDkzfrVeqtE1ktKQZAJJ2AOYBD9YsV2bWd516Klx8MWzKz+7etCl9dyDplSq62VCSgLnAXcCRwHURcVGN81YTvtnQrMEGDtwSQIoGDICNG+ufH6tIVc8TkXRg4es3gP8GFgC/k3RgRPype7NpZn1euQDSUbr1aNuqzvqvwusC4Flgv/z9a9UsUNI+khYXXs9JOl3SOZJWFtKPLkwzQ9IySUslTSykT8ppyySdWU1+zKzOBrTzzO720q3z6thJY4dnIhFxZHcvMCKWAuMBJA0AVgJXA58ALoqIVsFJ0n7ACcD+pO5WfiNp7zz4O8C7SXfQ3yHpmoi4t7vzbGZVmjsXzjordcsxenS6KW7atNQG0lapI0Hrmjp30rit6qyPRcQPJZ1RbnhEXNjF5b8TeCgiHk3NLmUdC1wRES8Dj0haBrw5D1sWEQ/nvF6Rx3UQMesJ2tuZzZqVvs+alaqwBgxI6d/9buPy2pecddaW37xk/fqUXu8gArwqv+9UZlhl3f927ATg8sL30yR9HFgI/L+IeBYYCdxaGGdFTgN4vE36W7ohT2bWHTramS1f7qBRK3XupHFb1Vn/nd+/1HaYpNO7smBJ2wPvB2bkpIuBr5CC01dI7S6fpHwfXUH59pyygU3SNGAawOgGdlRm1q/0wB5n+4XRo8t3F1+jfV+l94mUU7aKqxOOAv4UEU8CRMSTEbEpIl4BvseWKqsVwJ6F6UYBqzpI30pEzIqI5ohoHj58eBezbWYV6YE9zvYLde6ksStBpKu9+J5IoSpL0h6FYccBd+fP1wAnSNpB0jhgL+B24A5gL0nj8lnNCXlcM+sJemCPs/1CnTtprLQDxnKqbhPJD7l6N/DpQvJXJY3P811eGhYR90i6ktRgvhH4TERsyvM5DZgPDABmR8Q91ebJzLpZaafV9uqsHtR5YJ9Vx04aO7xjXdLzlA8WApoioitBqCF8x7qZWedVdcd6RJS7KsvMzAzoWnWWmVlV5i1aycz5S1m1toURQ5uYPnEfJk8Yue0JrcdxEDGzupq3aCUzrrqLlg2pr6yVa1uYcdVdAA4kvVBXrs4yM+u0mfOXbg4gJS0bNjFz/tIG5ci6wkHEzOpq1dqWTqVbz+YgYmZ1NWJoU6fSrWdzEDGzupo+cR+aBrXu9r1p0ACmT9ynQTmyrnDDupnVVanx3Fdn9Q0OImZWd5MnjHTQ6CNcnWVmZlVzEDEzs6o5iJiZWdUcRMzMrGoOImZmVjUHETMzq5qDiJmZVc1BxMzMquYgYmZmVXMQMTOzqjmImJlZ1RxEzMysag0LIpKWS7pL0mJJC3PaqyVdL+nB/L5rTpekb0paJmmJpAML85max39Q0tRGlcfMrD9q9JnIkRExPiKa8/czgRsiYi/ghvwd4Chgr/yaBlwMKegAZwNvAd4MnF0KPGZmVnuNDiJtHQvMyZ/nAJML6ZdFciswVNIewETg+oh4JiKeBa4HJtU702Zm/VUjg0gAv5Z0p6RpOe01EfEEQH7fPaePBB4vTLsip7WX3oqkaZIWSlq4evXqbi6GmVn/1ciHUh0WEask7Q5cL+n+DsZVmbToIL11QsQsYBZAc3PzVsPNzKw6DQsiEbEqvz8l6WpSm8aTkvaIiCdyddVTefQVwJ6FyUcBq3L6EW3Sb6px1s3MGmbeopU96tHCDanOkvQqSTuVPgPvAe4GrgFKV1hNBX6eP18DfDxfpXUwsC5Xd80H3iNp19yg/p6cZmbW58xbtJIZV93FyrUtBLBybQszrrqLeYtWNixPjWoTeQ3we0l/Bm4HfhkRvwIuAN4t6UHg3fk7wLXAw8Ay4HvAqQAR8QzwFeCO/PpyTjPrv+bOhbFjYbvt0vvcuY3OkXWTmfOX0rJhU6u0lg2bmDl/aYNy1KDqrIh4GHhTmfQ1wDvLpAfwmXbmNRuY3d15NOuV5s6FadNg/fr0/dFH03eAKVMaly/rFqvWtnQqvR562iW+ZtYVZ521JYCUrF+f0q3XGzG0qVPp9eAgYtaXPPZY59KtV5k+cR+aBg1oldY0aADTJ+7ToBw5iJj1fsU2kO3a+UuPHl3XLFltTJ4wkvM/cAAjhzYhYOTQJs7/wAENvTqrkfeJmFlXtW0D2bRp63GGDIHzzqtvvqxmJjBt0j8AABNaSURBVE8Y2dCg0ZbPRMx6s3JtIAADBoAEY8bArFluVLea8ZmIWW80d24KII8+Wn74K6+kl1mNOYj0Ez3tLlfrgrZVWOW4DcTqxEGkHyjd5Vq6Sal0lyvgQNIbtVeFVeI2EKsjt4n0Az3xLlfrgo4u13UbiHW3fPXfQXBQucE+E+kHeuJdrtYFo0eXbwsZMwaWL697dqwPq6Dq1Gci/UBPvMvVuuC881KVVZGrsKwWtlV1ioNIv9AT73K1LpgyJVVZjRnjy3ittiro6cDVWf1AqfHcV2f1IVOmOGhY7bVXdVrgINJP9LS7XM2sFzjvPLeJmJlZlYpVp+1wEDEzs/ZNmQLLl3Mn3FlusIOImZlVzUHEzMyq5iBiZmZV89VZ1mO500iznq/uZyKS9pR0o6T7JN0j6fM5/RxJKyUtzq+jC9PMkLRM0lJJEwvpk3LaMkln1rssVjulTiNXrm0h2NJp5LxFKxudNTMraER11kbg/0XEvsDBwGck7ZeHXRQR4/PrWoA87ARgf2AS8F1JAyQNAL4DHAXsB5xYmI/1cn2608ji42zHjk3fzXqpuldnRcQTwBP58/OS7gM6qqM4FrgiIl4GHpG0DHhzHrYsIh4GkHRFHvfemmXe6qbPdhrZtkO7Rx9N38F3oFuv1NCGdUljgQnAbTnpNElLJM2WtGtOGwk8XphsRU5rL73ccqZJWihp4erVq7uxBFYrfbbTyHId2q1fn9LNeqGGBRFJOwI/A06PiOeAi4HXAeNJZyr/VRq1zOTRQfrWiRGzIqI5IpqHDx/e5bxb7fXZTiPb69Cugo7uzHqihgQRSYNIAWRuRFwFEBFPRsSmiHgF+B5bqqxWAHsWJh8FrOog3fqAyRNGcv4HDmDk0CYEjBzaxPkfOKD3X53V3mNr/Thb66Xq3iYiScD3gfsi4sJC+h65vQTgOODu/Pka4EeSLgRGAHsBt5PORPaSNA5YSWp8/2h9SmH10Cc7jSzXoZ2fBWK9WCPuEzkMOAm4S9LinPavpKurxpOqpJYDnwaIiHskXUlqMN8IfCYiNgFIOg2YDwwAZkfEPfUsiFmnlRrPzzorVWGNHp0CiBvVrZdSRNlmhD6rubk5Fi5c2OhsmJn1KpLujIjmtunu9sTMzKrmIGJmZlVzEDEzs6o5iJiZWdXci69ZO9yLsNm2OYj0Qd75dV2pF+FSJ5ClXoQB/5ZmBa7O6mPchXr36NO9CJt1IweRPsY7v+6xau36TqWb9Veuzupj+mwX6nU24sVnWPmq3cqm93SuzrR68plIW738gUF9tgv1Opv+2x/QtOGlVmlNG15i+m9/0KAcVcbVmVZvDiJFc+cyb+YcDjvqbMZN/zmHHXU282bO6b5AUocA1We7UK+zyS8+wvnXfYuR655C8Qoj1z3F+dd9i8kvPtLorHXI1ZlWb/2u76wd9tgrmj//32VP8ee97UPM+LsTaRk0eHNa04aXOP+Oy5l880+7tuC2T7SD1HvrrFnd3vmeqzO6QR3XV3cad+Yvyz5UR8AjF7y33tmxPsR9ZxWsXNvCjB/exrxvX9kqfeb+720VQABaBg1m5v7d8Ofr6hPtTj0VBg4EKb2femq7o06eMJIFZ76DRy54LwvOfIcDSDWmTEkBY8yY9JuPGdPjAwi4OtPqr18GEYCWQTsw894XW1Uprdq5/FMP20vvlMceY96+b+ewU2Yz7p+v4bBTZjNv37dX9kS7U0+Fiy+GTbmaYtOm9L2DQGJtVFOVOGUKLF8Or7yS3nt4AAFXZ1r99dsgArBqp2GtzgRGbP9K2fHaS++MeW/9ADOO+iwrd9md0Has3GV3Zhz1Wea99QPbnnjWrMrTe/mFATVRqpp69FGISO/TpvXJ36bPPhHSeqx+2Sayx9SvAzBy3VMs+O+T05Em+cqWKxfRElse396k4PzjJ3T5T3jYv13Dyg0DtkofOWgTC77y/o4nVrnHyWfF9VeuHl+CU06B7363kznuQ8aOTYGjrTFj0hmGmW1Te20i/fY+kaYNLzH9d3NaPdu6FChq0Si9qkwA6Si9lQEDmLf3W5n59qms2nkYI557mum/m8PkB37ferxy7S4RzLvpXmaeeimrdtotTXvnz5j8+RN7RfVMt2ivyrCSqsRewBdSWCP1vyAS6Qxk+u/mMPmhP8Ls2a0G1+q53iOGNrGyzA1/lTR4zjv1HGYM2ndzo3+pKox3vYvJxRHL7BTn7ft2Zhz12dbTHv4JuOC7TF6wAK69dstjWo8+uvX3vvLY1tGjy5+JFA4geptS4Fi5tgXB5iuy3MeX1Vu/q85qlmIhwG67wTe+UbedZNsO/SA1eFZSX33YBb8tG4BGDm1iwZnv2JJQptrmsFNms3KX3beetlSV19H6b3NJ67xvX8nMpS+xasiujFj/LNP3Gczk047vMO9dMndu9zyLPN//M/OQE7ecyf3xciZPn9org2S5bamtrbYN61dqcXbq6qySgw6CBjxjvStVZRV3ZXLeeXDSSa0Cw6qdh5WfdudhHQcQ2HIJ8pQpzPv2lcx4ZAAtuSuQla/ajRmPvATfvnJzIOnWINO2fafUGA6d3vHP2+8IZhy1y+a2rnQm9znYb0LrM7k66eofvNwNhW25m5v+q949UPe7IHL/X55n3Jm/bEjdcbVVZUOHDOLZ9RvKprcyZQosWACXXLI5QIx47umyZyIjnnuaefu+vVU7y5HLbuPGv31L63aX+28GYObSlzYHkJKWQYOZuXQNk6GiINMpHd1X08kgMnP+0lYXSwC0hJg5f2ndq3y64w9eSYDwfSH9V0e9FjiIlCFpEvANYADwPxFxQUfjb9j0Sqs+haDn1x23d8JQLn3eP5zFzN0mseqv2zHiudUcueLP/GzI4VvdhX/kstu2aiv54YHHbL4SbHO7y7BhTAZWDdm1bB5K6dsKMp3WjY3hPalTyu74g7fXvlbi+0L6t3pv7736PhFJA4DvAEcB+wEnStqv0ul7S59C61q2Pgspl765870NAwiJlbvszs/GT+KDu8PI55/e0gfULT/gxgnv3Oru/LaXErcMGszMt38cgBHrny2bh1L6toJMp7XX6F1FY3hPuou7O/7g5W4oLK053xdi9d7ee3UQAd4MLIuIhyPir8AVwLGdmUFvqDuudKNo7yj3xtiVBd+ZyiP/+T4WXPwJJt/+C1ZtN6SiZZcuQZ6+z+DyvdrukwLRtoJMp513XmrYLxoyJKV3Uk+6i7s7/uDlbii86CPjWe5uboz6b++9PYiMBB4vfF+R01qRNE3SQklbtaj3hrrjSjeKzhzlVlru0niTTzue88dtYuSLa9IZzYtrOH/cps3tHdsKMp3WjX1X9aS7uLvrD+7+0aw99d7ee/UlvpI+DEyMiE/l7ycBb46Iz7Y3TfGO9Uovse0JKrmip+JLgansMtHO/j51vwS4l/LNgdYbtXeJb28PIocA50TExPx9BkBEnN/eNDuO2ieGf+zCPvnn7ey9KG13Zke+fjg33r/aOzcz20pfDSIDgQeAdwIrgTuAj0bEPe1N09zcHAsbcJ9Ivfgo18xqoU/ebBgRGyWdBswnXeI7u6MA0h/UqtsWM7NyenUQAYiIa4FrG50PM7P+qLdfnWVmZg3kIGJmZlVzEDEzs6o5iJiZWdUcRMzMrGq9+j6RakhaDZR5zF2vMAx4utGZ6EYuT8/W18oDfa9M9SzPmIgY3jax3wWR3kzSwnI3+/RWLk/P1tfKA32vTD2hPK7OMjOzqjmImJlZ1RxEepdZjc5AN3N5era+Vh7oe2VqeHncJmJmZlXzmYiZmVXNQcTMzKrmIFJnkmZLekrS3YW0V0u6XtKD+X3XnC5J35S0TNISSQcWppmax39Q0tRC+kGS7srTfFOSGlCecyStlLQ4v44uDJuR87ZU0sRC+qSctkzSmYX0cZJuy+X8saTta1yePSXdKOk+SfdI+nxO75XrqIPy9OZ1NFjS7ZL+nMv0pY7yIWmH/H1ZHj622rLWuTyXSnqksI7G5/Setc1FhF91fAFvAw4E7i6kfRU4M38+E/jP/Plo4DpAwMHAbTn91cDD+X3X/HnXPOx24JA8zXXAUQ0ozznAF8qMux/wZ2AHYBzwEOk5MAPy59cC2+dx9svTXAmckD9fAvxjjcuzB3Bg/rwT6aFn+/XWddRBeXrzOhKwY/48CLgt//Zl8wGcClySP58A/Ljasta5PJcCHyozfo/a5nwmUmcRcTPwTJvkY4E5+fMcYHIh/bJIbgWGStoDmAhcHxHPRMSzwPXApDxs54j4Y6Qt57LCvOpZnvYcC1wRES9HxCPAMuDN+bUsIh6OiL8CVwDH5qOldwA/zdMXf5uaiIgnIuJP+fPzwH3ASHrpOuqgPO3pDesoIuKF/HVQfkUH+Siuu58C78z57lRZG1Ce9vSobc5BpGd4TUQ8AelPD+ye00cCjxfGW5HTOkpfUSa9EU7Lp9qzS1U/dL48uwFrI2Jjm/S6yNUeE0hHhr1+HbUpD/TidSRpgKTFwFOkneVDHeRjc97z8HU5350ta820LU9ElNbReXkdXSRph5zWo7Y5B5GerVy9ZVSRXm8XA68DxgNPAP+V03tNeSTtCPwMOD0inuto1DJpPa5MZcrTq9dRRGyKiPHAKNKZw74d5KPHl6lteSS9AZgBvB74O1IV1b/k0XtUeRxEeoYn8ykn+f2pnL4C2LMw3ihg1TbSR5VJr6uIeDL/KV4Bvkf6k0Pny/M06VR9YJv0mpI0iLTDnRsRV+XkXruOypWnt6+jkohYC9xEahtoLx+b856H70Kqgu1sWWuuUJ5JuSoyIuJl4AdUv45qus05iPQM1wClKymmAj8vpH88X41xMLAuV6XMB94jaddcDfEeYH4e9rykg3Od78cL86qb0s42Ow4oXbl1DXBCvlpmHLAXqcHvDmCvfHXN9qTGz2ty/e2NwIfy9MXfplZ5F/B94L6IuLAwqFeuo/bK08vX0XBJQ/PnJuBdpLae9vJRXHcfAn6b892psta5PPcXDlpEasMorqOes811Vwu9XxVfiXE5qfpgA+kI4WRS/ewNwIP5/dWx5aqN75Dqe+8Cmgvz+SSpIXAZ8IlCenPe2B4Cvk3ulaDO5fnfnN8leYPfozD+WTlvSylcIUK64uSBPOysQvprSX/sZcBPgB1qXJ63kk71lwCL8+vo3rqOOihPb15HbwQW5bzfDfx7R/kABufvy/Lw11Zb1jqX57d5Hd0N/JAtV3D1qG3O3Z6YmVnVXJ1lZmZVcxAxM7OqOYiYmVnVHETMzKxqDiJmZlY1BxHrcyRtyr2e3i3pJ5KGdPP8/17St7cxzhGSDi18P0XSx7th2WMltUhapNQz7+3F3lq7i6QvS3pX/nx6d/+G1ncM3PYoZr1OS6QuJJA0FzgFuLDjSbrdEcALwB8AIuKSbpz3QxExAUDSa4GrJG0XET/orgVExL8Xvp5Ouk9hfXfN3/oOn4lYX3cL8LcAks7IZyd3Szo9p42VdL+kObmju5+WjrolLZc0LH9ulnRT25lLep/SMyoWSfqNpNfkjg5PAf4pnxEdrvT8ji/kacZLujUv72pteTbJTZL+M59dPCDp8G0VLiIeBs4APpfn8SqlDhXvyHk6Nqf/vaSrJP1K6VkTX83pA5SeW3G30vMm/imnXyrpQ5I+B4wAblR6LsnJki4qlP8fJNU7QFsP4iBifZZSP0lHAXdJOgj4BPAWUj9L/yBpQh51H2BWRLwReI70/IlK/R44OJ8ZXAH8c0QsJz3P4qKIGB8Rt7SZ5jLgX/Ly7gLOLgwbGBFvJh39n01l/kTqqA/SHdi/jYi/A44EZkp6VR42HvgIcADwEUl75rSREfGGiDiA1EfTZhHxTVI/S0dGxJG5jO9X6o8L0m/abWdA1vs4iFhf1KTUrfZC4DFS31FvBa6OiBcjPbvhKqB0pP94RCzIn3+Yx63UKGC+pLuA6cD+HY0saRdgaET8LifNIT3Yq6TU4eOdwNgK81DspfU9wJm5/DeRuvwYnYfdEBHrIuIl4F5gDOnBRa+V9C1Jk0hBtF0R8SKpO45jJL0eGBQRd1WYT+uD3CZifdHmNpGS3PFce9r2/VP6vpEtB1qD25n2W8CFEXGNpCNITwzsipfz+yYq/39OIHVACCmgfDAilhZHkPSWwrw3zz8inpX0JtIDjT4DHE/qf6kj/wP8K3A/Pgvp93wmYv3FzcBkSUNy9c5xpPYSgNGSDsmfTyRVUQEsBw7Knz/Yznx3AVbmz8WrpJ4nPY62lYhYBzxbaO84Cfhd2/EqldtfvkYKZpB6cv1sKWgWquzam34YsF1E/Az4N9KjjttqVZZID0zaE/goqQNO68ccRKxfiPSI2EtJvbjeBvxPRCzKg+8DpkpaQnr4z8U5/UvANyTdQjpyL+cc4Cd5nKcL6f8HHFdqWG8zzVRSW8USUpvElztZnNeVLvElPVf8W4Urs75CerzqEkl35+8dGQnclKu/LiU9CKmtWcB1km4spF0JLIj0GFbrx9yLr/Vr+Uj+FxHxhgZnpVeR9AvShQM3NDov1lg+EzGzikkaKukBUruTA4j5TMTMzKrnMxEzM6uag4iZmVXNQcTMzKrmIGJmZlVzEDEzs6r9f5jIrr4EvypjAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "venue_likes_grouped_info.plot(x='Population density', y='Likes', style='o')  \n",
    "plt.title('Total venue likes vs Borough Population Density')  \n",
    "plt.xlabel('Population Density')  \n",
    "plt.ylabel('Likes')  \n",
    "\n",
    "plt.scatter(X_2, y_pred_p,color='red',label='Fit')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "venue_likes_grouped_info.plot(x='Avg price', y='Likes', style='o')  \n",
    "plt.title('Popularity(likes) vs borough average property price')  \n",
    "plt.xlabel('Avg price')  \n",
    "plt.ylabel('Likes')  \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.35362198546965995"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_3=venue_likes_grouped_info[\"Avg price\"].values.reshape(-1,1)\n",
    "Y_3=venue_likes_grouped_info[\"Likes\"].values.reshape(-1,1)\n",
    "\n",
    "regressor3 = LinearRegression()  \n",
    "regressor3.fit(X_3, Y_3)\n",
    "\n",
    "y_pred3=regressor3.predict(X_3)\n",
    "\n",
    "r2_score(Y_3, y_pred3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 0.0\n",
      "1 0.35362198546965984\n",
      "2 0.35487771049293537\n",
      "3 0.38399383627366535\n",
      "4 0.39706200852530593\n",
      "5 0.4115021852965286\n",
      "6 0.4254864670554528\n",
      "7 0.43739556612446595\n",
      "8 0.44627884473978774\n",
      "9 0.4519521927971014\n",
      "10 0.45479710344036484\n",
      "11 0.45546935927725263\n",
      "12 0.4546670338327883\n",
      "13 0.4529987722687263\n",
      "14 0.4509333741686924\n"
     ]
    }
   ],
   "source": [
    "for i in range(15):\n",
    "    \n",
    "    poly = PolynomialFeatures(i)\n",
    "\n",
    "    X_p=poly.fit_transform(X_3)\n",
    "    Y_p= poly.fit_transform(Y_3)\n",
    "\n",
    "    regressorpoly = LinearRegression()  \n",
    "    regressorpoly.fit(X_p, Y_3)\n",
    "\n",
    "    y_pred_p=regressorpoly.predict(X_p)\n",
    "    \n",
    "    print(i, r2_score(Y_3,y_pred_p))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "poly = PolynomialFeatures(10)\n",
    "X_p=poly.fit_transform(X_3)\n",
    "Y_p= poly.fit_transform(Y_3)\n",
    "\n",
    "regressorpoly = LinearRegression()  \n",
    "regressorpoly.fit(X_p, Y_3)\n",
    "\n",
    "y_pred_p=regressorpoly.predict(X_p)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "venue_likes_grouped_info.plot(x='Avg price', y='Likes', style='o')  \n",
    "plt.title('Popularity(likes) vs borough average property price')  \n",
    "plt.xlabel('Avg price')  \n",
    "plt.ylabel('Likes')  \n",
    "plt.scatter(X_3, y_pred_p,color='red')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Likes</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Avg price</th>\n",
       "      <th>lng</th>\n",
       "      <th>lat</th>\n",
       "      <th>Population density</th>\n",
       "      <th>Profit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Barnet</td>\n",
       "      <td>523068</td>\n",
       "      <td>-0.1517</td>\n",
       "      <td>51.6252</td>\n",
       "      <td>11020.842042</td>\n",
       "      <td>-0.999994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>144</td>\n",
       "      <td>Bexley</td>\n",
       "      <td>332290</td>\n",
       "      <td>0.1505</td>\n",
       "      <td>51.4549</td>\n",
       "      <td>10123.481608</td>\n",
       "      <td>-0.999567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1395</td>\n",
       "      <td>Brent</td>\n",
       "      <td>494761</td>\n",
       "      <td>-0.2817</td>\n",
       "      <td>51.5588</td>\n",
       "      <td>18997.844311</td>\n",
       "      <td>-0.99718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>810</td>\n",
       "      <td>Bromley</td>\n",
       "      <td>446116</td>\n",
       "      <td>0.0198</td>\n",
       "      <td>51.4039</td>\n",
       "      <td>5483.853717</td>\n",
       "      <td>-0.998184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>16689</td>\n",
       "      <td>Camden</td>\n",
       "      <td>793557</td>\n",
       "      <td>-0.1255</td>\n",
       "      <td>51.5290</td>\n",
       "      <td>27347.500000</td>\n",
       "      <td>-0.978969</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Likes  Borough Avg price     lng      lat  Population density    Profit\n",
       "0      3   Barnet    523068 -0.1517  51.6252        11020.842042 -0.999994\n",
       "1    144   Bexley    332290  0.1505  51.4549        10123.481608 -0.999567\n",
       "2   1395    Brent    494761 -0.2817  51.5588        18997.844311  -0.99718\n",
       "3    810  Bromley    446116  0.0198  51.4039         5483.853717 -0.998184\n",
       "4  16689   Camden    793557 -0.1255  51.5290        27347.500000 -0.978969"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "venue_likes_grouped_info['Profit']=(venue_likes_grouped_info['Likes']-venue_likes_grouped_info['Avg price'])/venue_likes_grouped_info['Avg price']\n",
    "venue_likes_grouped_info.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "venue_likes_grouped_info.plot(x='Population density', y='Profit', style='o')  \n",
    "plt.title('Popularity(likes) vs borough average property price')  \n",
    "plt.xlabel('Population density')  \n",
    "plt.ylabel('Profit')  \n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.29173888731040853"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_4=venue_likes_grouped_info[\"Population density\"].values.reshape(-1,1)\n",
    "Y_4=venue_likes_grouped_info[\"Profit\"].values.reshape(-1,1)\n",
    "\n",
    "regressor4 = LinearRegression()  \n",
    "regressor4.fit(X_4, Y_4)\n",
    "\n",
    "y_pred4=regressor4.predict(X_4)\n",
    "\n",
    "r2_score(Y_4, y_pred4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 0.0\n",
      "1 0.29173888731040853\n",
      "2 0.2917410480183026\n",
      "3 0.3818276482824944\n",
      "4 0.4366257006614992\n",
      "5 0.4212140829759763\n",
      "6 0.40139865978198375\n",
      "7 0.4083660393349581\n",
      "8 0.4496492370331827\n",
      "9 0.5095651282506903\n",
      "10 0.5691081017733624\n",
      "11 0.6167370921203034\n",
      "12 0.6484479918854058\n",
      "13 0.6645431114658945\n",
      "14 0.6670459814480094\n"
     ]
    }
   ],
   "source": [
    "for i in range(15):\n",
    "    \n",
    "    poly = PolynomialFeatures(i)\n",
    "\n",
    "    X_p=poly.fit_transform(X_4)\n",
    "    Y_p= poly.fit_transform(Y_4)\n",
    "\n",
    "    regressorpoly = LinearRegression()  \n",
    "    regressorpoly.fit(X_p, Y_4)\n",
    "\n",
    "    y_pred_p=regressorpoly.predict(X_p)\n",
    "    \n",
    "    print(i,r2_score(Y_4,y_pred_p))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "poly = PolynomialFeatures(10)\n",
    "\n",
    "X_p=poly.fit_transform(X_4)\n",
    "Y_p= poly.fit_transform(Y_4)\n",
    "\n",
    "regressorpoly = LinearRegression()  \n",
    "regressorpoly.fit(X_p, Y_4)\n",
    "y_pred_p=regressorpoly.predict(X_p)\n",
    "\n",
    "venue_likes_grouped_info.plot(x='Population density', y='Profit', style='o')  \n",
    "plt.title('Popularity(likes) vs borough average property price')  \n",
    "plt.xlabel('Population density')  \n",
    "plt.ylabel('Profit')  \n",
    "plt.scatter(X_4, y_pred_p,color='red')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
